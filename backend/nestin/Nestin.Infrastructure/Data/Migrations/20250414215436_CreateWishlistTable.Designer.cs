// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nestin.Infrastructure.Data;

#nullable disable

namespace Nestin.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250414215436_CreateWishlistTable")]
    partial class CreateWishlistTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d35a86a5-72b3-4e7e-bb7f-5ef782b36f7c",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9c75a5df-20a4-4ff1-85a5-bb52f9cf223f",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        },
                        new
                        {
                            Id = "59ebef1f-d79b-4db0-9c5a-304836f14ff1",
                            Name = "Host",
                            NormalizedName = "HOST"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "2dacdb51-fee9-4479-904c-cafe7dca22a6",
                            RoleId = "d35a86a5-72b3-4e7e-bb7f-5ef782b36f7c"
                        },
                        new
                        {
                            UserId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            RoleId = "59ebef1f-d79b-4db0-9c5a-304836f14ff1"
                        },
                        new
                        {
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8",
                            RoleId = "9c75a5df-20a4-4ff1-85a5-bb52f9cf223f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Nestin.Core.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 11,
                            Icon = "wifi",
                            Name = "Wi-Fi"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Icon = "waves",
                            Name = "Pool"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 7,
                            Icon = "air-vent",
                            Name = "Air conditioning"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 9,
                            Icon = "bath",
                            Name = "Bathtub"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 9,
                            Icon = "wind",
                            Name = "Hair dryer"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 9,
                            Icon = "broom",
                            Name = "Cleaning products"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 9,
                            Icon = "droplets",
                            Name = "Shampoo"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 9,
                            Icon = "droplet",
                            Name = "Conditioner"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Icon = "soap",
                            Name = "Body soap"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 9,
                            Icon = "toilet",
                            Name = "Bidet"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 9,
                            Icon = "shower-head",
                            Name = "Outdoor shower"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 9,
                            Icon = "thermometer-sun",
                            Name = "Hot water"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 9,
                            Icon = "flask-round",
                            Name = "Shower gel"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 8,
                            Icon = "sparkles",
                            Name = "Free washer – In unit"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 8,
                            Icon = "shirt",
                            Name = "Hangers"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 8,
                            Icon = "bed-double",
                            Name = "Bed linens"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 8,
                            Icon = "pill",
                            Name = "Extra pillows and blankets"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 8,
                            Icon = "lamp",
                            Name = "Room-darkening shades"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 8,
                            Icon = "flame",
                            Name = "Iron"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 8,
                            Icon = "hanger",
                            Name = "Drying rack for clothing"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 8,
                            Icon = "bug",
                            Name = "Mosquito net"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 8,
                            Icon = "archive",
                            Name = "Clothing storage: closet and dresser"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Icon = "cable",
                            Name = "Ethernet connection"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            Icon = "tv",
                            Name = "42 inch HDTV with Netflix"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 4,
                            Icon = "volume-2",
                            Name = "Sound system with aux"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 4,
                            Icon = "gamepad-2",
                            Name = "Game console"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 4,
                            Icon = "tennis",
                            Name = "Ping pong table"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 4,
                            Icon = "dice-5",
                            Name = "Pool table"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 4,
                            Icon = "book-open",
                            Name = "Books and reading material"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 4,
                            Icon = "film",
                            Name = "Movie theater"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 10,
                            Icon = "baby",
                            Name = "Crib"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 10,
                            Icon = "blocks",
                            Name = "Children’s books and toys"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 10,
                            Icon = "chair",
                            Name = "High chair"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 10,
                            Icon = "baby",
                            Name = "Baby bath"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 10,
                            Icon = "utensils-crossed",
                            Name = "Children’s dinnerware"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 10,
                            Icon = "dice-3",
                            Name = "Board games"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 10,
                            Icon = "door-closed",
                            Name = "Baby safety gates"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 10,
                            Icon = "user",
                            Name = "Babysitter recommendations"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 10,
                            Icon = "puzzle",
                            Name = "Children's playroom"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 7,
                            Icon = "flame",
                            Name = "Indoor fireplace: wood-burning"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 7,
                            Icon = "fan",
                            Name = "Ceiling fan"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 7,
                            Icon = "fan",
                            Name = "Portable fans"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 7,
                            Icon = "thermometer",
                            Name = "Heating"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            Icon = "first-aid-kit",
                            Name = "First aid kit"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            Icon = "laptop",
                            Name = "Dedicated workspace"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 2,
                            Icon = "chef-hat",
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 2,
                            Icon = "fridge",
                            Name = "Refrigerator"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 2,
                            Icon = "utensils-crossed",
                            Name = "Cooking basics"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 2,
                            Icon = "plate",
                            Name = "Dishes and silverware"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 2,
                            Icon = "snowflake",
                            Name = "Freezer"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 2,
                            Icon = "droplet",
                            Name = "Dishwasher"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 2,
                            Icon = "flame",
                            Name = "Stove"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 2,
                            Icon = "microwave",
                            Name = "Oven"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 2,
                            Icon = "kettle",
                            Name = "Hot water kettle"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 2,
                            Icon = "coffee",
                            Name = "Coffee maker"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 2,
                            Icon = "sandwich",
                            Name = "Toaster"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 2,
                            Icon = "sheet",
                            Name = "Baking sheet"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 2,
                            Icon = "blender",
                            Name = "Blender"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 2,
                            Icon = "knife",
                            Name = "Barbecue utensils"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 2,
                            Icon = "coffee",
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 12,
                            Icon = "door-open",
                            Name = "Private entrance"
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 12,
                            Icon = "shirt",
                            Name = "Laundromat nearby"
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 12,
                            Icon = "mountain",
                            Name = "Balacony"
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 12,
                            Icon = "fire-extinguisher",
                            Name = "Fire Pit"
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 12,
                            Icon = "sofa",
                            Name = "Outdoor furniture"
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 13,
                            Icon = "paw-print",
                            Name = "Pets Allowed"
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 6,
                            Icon = "car",
                            Name = "Free street parking"
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 6,
                            Icon = "car",
                            Name = "Free street On premises"
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 13,
                            Icon = "calendar",
                            Name = "Long term stays allowed"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.AmenityCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AmenityCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Essentials"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kitchen and dining"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Home safety"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Outdoor"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Parking and facilities"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Heating and cooling"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bedroom and laundry"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Bathroom"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Internet and office"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Location features"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Services"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2dacdb51-fee9-4479-904c-cafe7dca22a6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2bc5ed7c-f23c-41b2-8f24-6cde1379cf70",
                            Email = "admin@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEC7spMPg5RTE/+JwhaFMZ9D4qe125yj/pgHQRdpqvzZn/yUZ56sxPK6NYZ+WPproog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2O776OTQMPGHNUKGKGVD7EK56EWEHWJ4",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3bc5ed7c-f23c-41b2-8f24-6cde1379cf70",
                            Email = "host@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOST@EMAIL.COM",
                            NormalizedUserName = "HOST",
                            PasswordHash = "AQAAAAIAAYagAAAAEC7spMPg5RTE/+JwhaFMZ9D4qe125yj/pgHQRdpqvzZn/yUZ56sxPK6NYZ+WPproog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "HOSTSTAMP",
                            TwoFactorEnabled = false,
                            UserName = "host"
                        },
                        new
                        {
                            Id = "4dacdb51-fee9-4479-904c-cafe7dca22a8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bc5ed7c-f23c-41b2-8f24-6cde1379cf70",
                            Email = "guest@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "GUEST@EMAIL.COM",
                            NormalizedUserName = "GUEST",
                            PasswordHash = "AQAAAAIAAYagAAAAEC7spMPg5RTE/+JwhaFMZ9D4qe125yj/pgHQRdpqvzZn/yUZ56sxPK6NYZ+WPproog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "GUESTSTAMP",
                            TwoFactorEnabled = false,
                            UserName = "guest"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afghanistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Åland Islands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Albania",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Algeria",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "American Samoa",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Andorra",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Angola",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Anguilla",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Antarctica",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Antigua and Barbuda",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Argentina",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Armenia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "Aruba",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Australia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Austria",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "Azerbaijan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bahamas",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 18,
                            Name = "Bahrain",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 19,
                            Name = "Bangladesh",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Barbados",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "Belarus",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Belgium",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Belize",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 24,
                            Name = "Benin",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 25,
                            Name = "Bermuda",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 26,
                            Name = "Bhutan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 27,
                            Name = "Bolivia",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 28,
                            Name = "Bosnia and Herzegovina",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 29,
                            Name = "Botswana",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 30,
                            Name = "Bouvet Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 31,
                            Name = "Brazil",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 32,
                            Name = "British Indian Ocean Territory",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 33,
                            Name = "Brunei Darussalam",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 34,
                            Name = "Bulgaria",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 35,
                            Name = "Burkina Faso",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 36,
                            Name = "Burundi",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 37,
                            Name = "Cambodia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 38,
                            Name = "Cameroon",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 39,
                            Name = "Canada",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 40,
                            Name = "Cape Verde",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 41,
                            Name = "Cayman Islands",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 42,
                            Name = "Central African Republic",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 43,
                            Name = "Chad",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 44,
                            Name = "Chile",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 45,
                            Name = "China",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 46,
                            Name = "Christmas Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 47,
                            Name = "Cocos (Keeling) Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 48,
                            Name = "Colombia",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 49,
                            Name = "Comoros",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 50,
                            Name = "Congo",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 51,
                            Name = "Congo, The Democratic Republic of the",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 52,
                            Name = "Cook Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 53,
                            Name = "Costa Rica",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 54,
                            Name = "Cote D'Ivoire",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 55,
                            Name = "Croatia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 56,
                            Name = "Cuba",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 57,
                            Name = "Cyprus",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 58,
                            Name = "Czech Republic",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 59,
                            Name = "Denmark",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 60,
                            Name = "Djibouti",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 61,
                            Name = "Dominica",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 62,
                            Name = "Dominican Republic",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 63,
                            Name = "Ecuador",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 64,
                            Name = "Egypt",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 65,
                            Name = "El Salvador",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 66,
                            Name = "Equatorial Guinea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 67,
                            Name = "Eritrea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 68,
                            Name = "Estonia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 69,
                            Name = "Ethiopia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 70,
                            Name = "Falkland Islands (Malvinas)",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 71,
                            Name = "Faroe Islands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 72,
                            Name = "Fiji",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 73,
                            Name = "Finland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 74,
                            Name = "France",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 75,
                            Name = "French Guiana",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 76,
                            Name = "French Polynesia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 77,
                            Name = "French Southern Territories",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 78,
                            Name = "Gabon",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 79,
                            Name = "Gambia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 80,
                            Name = "Georgia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 81,
                            Name = "Germany",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 82,
                            Name = "Ghana",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 83,
                            Name = "Gibraltar",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 84,
                            Name = "Greece",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 85,
                            Name = "Greenland",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 86,
                            Name = "Grenada",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 87,
                            Name = "Guadeloupe",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 88,
                            Name = "Guam",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 89,
                            Name = "Guatemala",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 90,
                            Name = "Guernsey",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 91,
                            Name = "Guinea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 92,
                            Name = "Guinea-Bissau",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 93,
                            Name = "Guyana",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 94,
                            Name = "Haiti",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 95,
                            Name = "Heard Island and McDonald Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 96,
                            Name = "Honduras",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 97,
                            Name = "Hong Kong",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 98,
                            Name = "Hungary",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 99,
                            Name = "Iceland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 100,
                            Name = "India",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 101,
                            Name = "Indonesia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 102,
                            Name = "Iran",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 103,
                            Name = "Iraq",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 104,
                            Name = "Ireland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 105,
                            Name = "Israel",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 106,
                            Name = "Italy",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 107,
                            Name = "Jamaica",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 108,
                            Name = "Japan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 109,
                            Name = "Jersey",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 110,
                            Name = "Jordan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 111,
                            Name = "Kazakhstan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 112,
                            Name = "Kenya",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 113,
                            Name = "Kiribati",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 114,
                            Name = "Korea, Democratic People's Republic of",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 115,
                            Name = "Korea, Republic of",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 116,
                            Name = "Kuwait",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 117,
                            Name = "Kyrgyzstan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 118,
                            Name = "Lao People's Democratic Republic",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 119,
                            Name = "Latvia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 120,
                            Name = "Lebanon",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 121,
                            Name = "Lesotho",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 122,
                            Name = "Liberia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 123,
                            Name = "Libya",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 124,
                            Name = "Liechtenstein",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 125,
                            Name = "Lithuania",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 126,
                            Name = "Luxembourg",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 127,
                            Name = "Macao",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 128,
                            Name = "Madagascar",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 129,
                            Name = "Malawi",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 130,
                            Name = "Malaysia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 131,
                            Name = "Maldives",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 132,
                            Name = "Mali",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 133,
                            Name = "Malta",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 134,
                            Name = "Marshall Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 135,
                            Name = "Martinique",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 136,
                            Name = "Mauritania",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 137,
                            Name = "Mauritius",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 138,
                            Name = "Mayotte",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 139,
                            Name = "Mexico",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 140,
                            Name = "Micronesia (Federated States of)",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 141,
                            Name = "Moldova (Republic of)",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 142,
                            Name = "Monaco",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 143,
                            Name = "Mongolia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 144,
                            Name = "Montenegro",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 145,
                            Name = "Montserrat",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 146,
                            Name = "Morocco",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 147,
                            Name = "Mozambique",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 148,
                            Name = "Myanmar",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 149,
                            Name = "Namibia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 150,
                            Name = "Nauru",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 151,
                            Name = "Nepal",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 152,
                            Name = "Netherlands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 153,
                            Name = "New Caledonia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 154,
                            Name = "New Zealand",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 155,
                            Name = "Nicaragua",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 156,
                            Name = "Niger",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 157,
                            Name = "Nigeria",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 158,
                            Name = "Niue",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 159,
                            Name = "Norfolk Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 160,
                            Name = "North Macedonia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 161,
                            Name = "Northern Mariana Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 162,
                            Name = "Norway",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 163,
                            Name = "Oman",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 164,
                            Name = "Pakistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 165,
                            Name = "Palau",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 166,
                            Name = "Palestine",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 167,
                            Name = "Panama",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 168,
                            Name = "Papua New Guinea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 169,
                            Name = "Paraguay",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 170,
                            Name = "Peru",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 171,
                            Name = "Philippines",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 172,
                            Name = "Pitcairn",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 173,
                            Name = "Poland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 174,
                            Name = "Portugal",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 175,
                            Name = "Puerto Rico",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 176,
                            Name = "Qatar",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 177,
                            Name = "Romania",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 178,
                            Name = "Russian Federation",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 179,
                            Name = "Rwanda",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 180,
                            Name = "Réunion",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 181,
                            Name = "Saint Barthélemy",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 182,
                            Name = "Saint Helena, Ascension and Tristan da Cunha",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 183,
                            Name = "Saint Kitts and Nevis",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 184,
                            Name = "Saint Lucia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 185,
                            Name = "Saint Martin",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 186,
                            Name = "Saint Pierre and Miquelon",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 187,
                            Name = "Saint Vincent and the Grenadines",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 188,
                            Name = "Samoa",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 189,
                            Name = "San Marino",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 190,
                            Name = "Sao Tome and Principe",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 191,
                            Name = "Saudi Arabia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 192,
                            Name = "Senegal",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 193,
                            Name = "Serbia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 194,
                            Name = "Seychelles",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 195,
                            Name = "Sierra Leone",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 196,
                            Name = "Singapore",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 197,
                            Name = "Sint Maarten",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 198,
                            Name = "Slovakia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 199,
                            Name = "Slovenia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 200,
                            Name = "Solomon Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 201,
                            Name = "Somalia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 202,
                            Name = "South Africa",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 203,
                            Name = "South Georgia and the South Sandwich Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 204,
                            Name = "South Sudan",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 205,
                            Name = "Spain",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 206,
                            Name = "Sri Lanka",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 207,
                            Name = "Sudan",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 208,
                            Name = "Suriname",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 209,
                            Name = "Svalbard",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 210,
                            Name = "Swaziland",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 211,
                            Name = "Sweden",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 212,
                            Name = "Switzerland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 213,
                            Name = "Syrian Arab Republic",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 214,
                            Name = "Taiwan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 215,
                            Name = "Tajikistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 216,
                            Name = "Tanzania (United Republic of)",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 217,
                            Name = "Thailand",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 218,
                            Name = "Timor-Leste",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 219,
                            Name = "Togo",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 220,
                            Name = "Tokelau",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 221,
                            Name = "Tonga",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 222,
                            Name = "Trinidad and Tobago",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 223,
                            Name = "Tunisia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 224,
                            Name = "Turkey",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 225,
                            Name = "Turkmenistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 226,
                            Name = "Tuvalu",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 227,
                            Name = "Uganda",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 228,
                            Name = "Ukraine",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 229,
                            Name = "United Arab Emirates",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 230,
                            Name = "United Kingdom of Great Britain and Northern Ireland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 231,
                            Name = "United States of America",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 232,
                            Name = "Uruguay",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 233,
                            Name = "Uzbekistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 234,
                            Name = "Vanuatu",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 235,
                            Name = "Venezuela (Bolivarian Republic of)",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 236,
                            Name = "Viet Nam",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 237,
                            Name = "Western Sahara",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 238,
                            Name = "Yemen",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 239,
                            Name = "Zambia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 240,
                            Name = "Zimbabwe",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 241,
                            Name = "Antarctica",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 242,
                            Name = "Ascension Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 243,
                            Name = "French Guiana",
                            RegionId = 5
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.FileUpload", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("FileUploads");

                    b.HasData(
                        new
                        {
                            Id = "b455bb0a-69a3-4024-b5fa-5a49323e58fd",
                            Path = "images/egy1.avif"
                        },
                        new
                        {
                            Id = "dc16e3d2-16ed-4ff5-b9c2-27a1e8b5ccbe",
                            Path = "images/egy2.avif"
                        },
                        new
                        {
                            Id = "4b0f81f1-9bc0-45c6-988e-1a4fd270b3e0",
                            Path = "images/egy3.avif"
                        },
                        new
                        {
                            Id = "2ac68b52-e7b6-4bb7-9f8e-49aa7f2b2b6c",
                            Path = "images/italy1.webp"
                        },
                        new
                        {
                            Id = "69c6c01e-65b3-4cf7-bbc7-2e94272b658a",
                            Path = "images/italy2.avif"
                        },
                        new
                        {
                            Id = "95cde2b1-305e-4c13-9293-8c4c8f7c8b9f",
                            Path = "images/italy3.avif"
                        },
                        new
                        {
                            Id = "7a18064f-b6cb-4d58-a51b-0e8a74eac7a4",
                            Path = "images/makkah1.avif"
                        },
                        new
                        {
                            Id = "4dfe3d56-2d34-4a6b-9cb5-f7a5a2dd8c28",
                            Path = "images/makkah2.avif"
                        },
                        new
                        {
                            Id = "6c54a231-b88f-409f-b5d5-170180930186",
                            Path = "images/makkah3.avif"
                        },
                        new
                        {
                            Id = "26d418bb-0f90-4f3c-b339-7dd5c31b5e99",
                            Path = "images/california1.jpeg"
                        },
                        new
                        {
                            Id = "a4c0d40d-e90e-4b14-8a2a-5ac0212be9b1",
                            Path = "images/california2.jpeg"
                        },
                        new
                        {
                            Id = "89f65612-5023-489e-9604-2f01074abf0c",
                            Path = "images/california3.avif"
                        },
                        new
                        {
                            Id = "b21f8f4f-6d95-4f60-81b4-56d2ef017a08",
                            Path = "images/brazil1.avif"
                        },
                        new
                        {
                            Id = "e34a2808-38df-4e47-8c3e-d6e3f2712f11",
                            Path = "images/brazil2.avif"
                        },
                        new
                        {
                            Id = "5b742ed2-28d9-4e3b-8125-6e9c4587a0d3",
                            Path = "images/brazil3.avif"
                        },
                        new
                        {
                            Id = "2cf95d6d-63ae-4b97-8101-c6c5e8227b6d",
                            Path = "images/barcelona1.avif"
                        },
                        new
                        {
                            Id = "ce9e31d6-6553-4214-8b94-fb9c8f3065ed",
                            Path = "images/barcelona2.avif"
                        },
                        new
                        {
                            Id = "5e2e82a1-4893-4a63-9375-d73f7a09d7c5",
                            Path = "images/barcelona3.avif"
                        },
                        new
                        {
                            Id = "7d861c0c-011d-4b2a-8ce5-f5b1f0b81d01",
                            Path = "images/jordan1.avif"
                        },
                        new
                        {
                            Id = "fbc177de-bf4c-4b75-a1f6-884d05ce6c9f",
                            Path = "images/jordan2.avif"
                        },
                        new
                        {
                            Id = "51d1e109-dccf-45fd-9f15-bbd3c0b7fcd5",
                            Path = "images/jordan3.avif"
                        },
                        new
                        {
                            Id = "6c79893d-f97f-4fc6-b0c3-4ebfcab3f85f",
                            Path = "images/france1.avif"
                        },
                        new
                        {
                            Id = "98a76538-918f-4e60-9c01-b364e0e1891f",
                            Path = "images/france2.avif"
                        },
                        new
                        {
                            Id = "f3885b77-0f9e-4ec3-9b3e-cbc194a07d7f",
                            Path = "images/france3.avif"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.GuestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GuestTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adults"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Childern"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Infants"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pets"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 64,
                            Name = "Nazlet El-Semman, Giza Governorate"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 106,
                            Name = "Milan, Lombardia"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 191,
                            Name = "Makkah, Makkah Province"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 231,
                            Name = "Yucca Valley, California"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 31,
                            Name = "Salvador, Bahia"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 205,
                            Name = "Barcelona, Catalunya"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 110,
                            Name = "Wadi Rum Village, Aqaba Governorate"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 74,
                            Name = "Tanneron, Provence-Alpes-Côte d'Azur"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Property", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseRules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SafteyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PropertyTypeId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            CancellationPolicy = "Free cancellation before May 28 , Cancel before check-in on Jun 2 for a partial refund.",
                            Description = "Enjoy your stay with Panoramic View of the giza pyramids and sphinx .Yes! view and pictures are all 100% real...",
                            HouseRules = "Check-in after 2:00 PM , Checkout before 11:00 AM , 2 guests maximum",
                            Latitude = 29.98333m,
                            LocationId = 1,
                            Longitude = 31.13333m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 3000m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No Carbon monoxide alarm , No Smoke alarm ",
                            Title = "Entire rental unit in Nazlet El-Semman, Egypt"
                        },
                        new
                        {
                            Id = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            CancellationPolicy = "Free cancellation before May 17 , Cancel before check-in on May 18 for a partial refund.",
                            Description = "Elegant apartment inside the famous castle in Nolo, a royal choice right in the center of Milan...",
                            HouseRules = "Check-in: 3:00 PM - 11:00PM ,Checkout before 11:00 AM ,4 guests maximum",
                            Latitude = 45.46427m,
                            LocationId = 2,
                            Longitude = 9.18951m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 5000m,
                            PropertyTypeId = 2,
                            SafteyInfo = "Carbon monoxide alarm ,Smoke alarm installed",
                            Title = "Milano Duomo center 10 min Flat inside a castle"
                        },
                        new
                        {
                            Id = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            CancellationPolicy = "Free cancellation before May 17 , Cancel before check-in on May 18 for a partial refund.",
                            Description = "Relax with this listing Small 2-room 7-bed apartment near Alharam Al Makkah with a maximum of 10 to 12 minutes' walk away...",
                            HouseRules = "Check-in after 3:00 PM , Checkout before 12:00 PM , 7 guests maximum",
                            Latitude = 21.4266m,
                            LocationId = 3,
                            Longitude = 39.8256m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 6000m,
                            PropertyTypeId = 3,
                            SafteyInfo = "Carbon monoxide alarm ,Smoke alarm installed",
                            Title = "Rent an apartment near Alhar Mecca"
                        },
                        new
                        {
                            Id = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            CancellationPolicy = "Free cancellation before May 17 , Cancel before check-in on May 18 for a partial refund.",
                            Description = "Updated pool and spa! Sitting on 100 acres, Hawkeye House, featured on the cover of the May 2019 issue of Dwell Magazine...",
                            HouseRules = "Check-in after 3:00 PM , Checkout before 12:00 PM , 7 guests maximum",
                            Latitude = 34.114174m,
                            LocationId = 4,
                            Longitude = -116.432236m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 15000m,
                            PropertyTypeId = 1,
                            SafteyInfo = "Carbon monoxide alarm ,Smoke alarm installed",
                            Title = "Hawkeye Dome - New Pool and Spa"
                        },
                        new
                        {
                            Id = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            CancellationPolicy = "Free cancellation before Oct 22 , Cancel before check-in on Oct 23 for a partial refund.",
                            Description = "Romantic Loft with mezzanine and large balcony in front of the sea, double bed and 1 single bed, tv, wi-fi, fan...",
                            HouseRules = "3 guests maximum , Pets allowed",
                            Latitude = -12.9711m,
                            LocationId = 5,
                            Longitude = -38.5108m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 1300m,
                            PropertyTypeId = 2,
                            SafteyInfo = "Carbon monoxide alarm not reported , Smoke alarm not reported , Exterior security cameras on property",
                            Title = "(4 charming oceanfront loft!"
                        },
                        new
                        {
                            Id = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            CancellationPolicy = "Free cancellation before Jun 3. Cancel before check-in on Jun 4 for a partial refund",
                            Description = "Set in an architectural prize-winning building, this modern Barcelona apartment beauty has impressive detail...",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            Latitude = 41.3888m,
                            LocationId = 6,
                            Longitude = 2.159m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 6500m,
                            PropertyTypeId = 2,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm , Heights without rails or protectio",
                            Title = "Sunny and cozy Apartment Sagrada Familia"
                        },
                        new
                        {
                            Id = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            CancellationPolicy = "Free cancellation before Jun 3. Cancel before check-in on Jun 4 for a partial refund",
                            Description = "To give you the best experience of the authentic Bedouin life style, we will gather around the fire...",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            Latitude = 29.5726m,
                            LocationId = 7,
                            Longitude = 35.4186m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 2200m,
                            PropertyTypeId = 4,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm , Heights without rails or protectio",
                            Title = "Wadi Rum Sunset Cave"
                        },
                        new
                        {
                            Id = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            CancellationPolicy = "Free cancellation before Jun 3. Cancel before check-in on Jun 4 for a partial refund",
                            Description = "Interior designer's own guesthouse, this unique place has a style all its own...",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            Latitude = 43.5914m,
                            LocationId = 8,
                            Longitude = 6.8761m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 9000m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm , Heights without rails or protectio",
                            Title = "New! The View: See to Mouintain (with pool)"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAmenity", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("PropertyAmenities");

                    b.HasData(
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            AmenityId = 9
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            AmenityId = 11
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            AmenityId = 2
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            AmenityId = 4
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            AmenityId = 20
                        },
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            AmenityId = 2
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            AmenityId = 5
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            AmenityId = 3
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            AmenityId = 4
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            AmenityId = 16
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            AmenityId = 8
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            AmenityId = 22
                        },
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            AmenityId = 11
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            AmenityId = 30
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            AmenityId = 11
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            AmenityId = 14
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            AmenityId = 51
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            AmenityId = 61
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            AmenityId = 28
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            AmenityId = 42
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2(3)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyAvailabilities");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyFees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1212.09m,
                            Name = "Cleaning Fee",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 442.09m,
                            Name = "Extra Guest Fee",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 600m,
                            Name = "Pet Fee",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 600m,
                            Name = "Pet Fee",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1200m,
                            Name = "Cleaning Fee",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 900.12m,
                            Name = "Cleaning Fee",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 442.09m,
                            Name = "Extra Guest Fee",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 113.09m,
                            Name = "Cleaning Fee",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyGuest", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GuestTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.HasKey("PropertyId", "GuestTypeId");

                    b.HasIndex("GuestTypeId");

                    b.ToTable("PropertyGuests");

                    b.HasData(
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            GuestTypeId = 1,
                            GuestCount = 1
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            GuestTypeId = 4,
                            GuestCount = 5
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            GuestTypeId = 1,
                            GuestCount = 3
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            GuestTypeId = 3,
                            GuestCount = 1
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            GuestTypeId = 2,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            GuestTypeId = 2,
                            GuestCount = 6
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            GuestTypeId = 4,
                            GuestCount = 3
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            GuestTypeId = 3,
                            GuestCount = 2
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyPhoto", b =>
                {
                    b.Property<string>("PhotoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TouchedAt")
                        .HasColumnType("datetime2(3)");

                    b.HasKey("PhotoId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyPhotos");

                    b.HasData(
                        new
                        {
                            PhotoId = "b455bb0a-69a3-4024-b5fa-5a49323e58fd",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "dc16e3d2-16ed-4ff5-b9c2-27a1e8b5ccbe",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "4b0f81f1-9bc0-45c6-988e-1a4fd270b3e0",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "2ac68b52-e7b6-4bb7-9f8e-49aa7f2b2b6c",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "69c6c01e-65b3-4cf7-bbc7-2e94272b658a",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "95cde2b1-305e-4c13-9293-8c4c8f7c8b9f",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "7a18064f-b6cb-4d58-a51b-0e8a74eac7a4",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "4dfe3d56-2d34-4a6b-9cb5-f7a5a2dd8c28",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "6c54a231-b88f-409f-b5d5-170180930186",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "26d418bb-0f90-4f3c-b339-7dd5c31b5e99",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "a4c0d40d-e90e-4b14-8a2a-5ac0212be9b1",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "89f65612-5023-489e-9604-2f01074abf0c",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "b21f8f4f-6d95-4f60-81b4-56d2ef017a08",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "e34a2808-38df-4e47-8c3e-d6e3f2712f11",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "5b742ed2-28d9-4e3b-8125-6e9c4587a0d3",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "2cf95d6d-63ae-4b97-8101-c6c5e8227b6d",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "ce9e31d6-6553-4214-8b94-fb9c8f3065ed",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "5e2e82a1-4893-4a63-9375-d73f7a09d7c5",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "7d861c0c-011d-4b2a-8ce5-f5b1f0b81d01",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "fbc177de-bf4c-4b75-a1f6-884d05ce6c9f",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "51d1e109-dccf-45fd-9f15-bbd3c0b7fcd5",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "6c79893d-f97f-4fc6-b0c3-4ebfcab3f85f",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "98a76538-918f-4e60-9c01-b364e0e1891f",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "f3885b77-0f9e-4ec3-9b3e-cbc194a07d7f",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PropertySpaceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertySpaceTypeId");

                    b.ToTable("PropertySpaceItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Master Bedroom",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Guest Bedroom",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kid’s Bedroom",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Full Bathroom",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Half Bathroom",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ensuite Bathroom",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Full Kitchen",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kitchenette",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Outdoor Kitchen",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Living Room",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = 11,
                            Name = "Lounge Area",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Entertainment Room",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Dining Room",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Breakfast Nook",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Bar Counter",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "Dedicated Office",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = 17,
                            Name = "Desk in Room",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = 18,
                            Name = "Co-working Corner",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = 19,
                            Name = "Laundry Room",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = 20,
                            Name = "Washer/Dryer in Unit",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = 21,
                            Name = "Shared Laundry Area",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = 22,
                            Name = "Private Entrance",
                            PropertySpaceTypeId = 8
                        },
                        new
                        {
                            Id = 23,
                            Name = "Shared Entrance",
                            PropertySpaceTypeId = 8
                        },
                        new
                        {
                            Id = 24,
                            Name = "Gated Entrance",
                            PropertySpaceTypeId = 8
                        },
                        new
                        {
                            Id = 25,
                            Name = "Balcony",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = 26,
                            Name = "Terrace",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = 27,
                            Name = "Rooftop",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = 28,
                            Name = "Backyard",
                            PropertySpaceTypeId = 10
                        },
                        new
                        {
                            Id = 29,
                            Name = "Garden",
                            PropertySpaceTypeId = 10
                        },
                        new
                        {
                            Id = 30,
                            Name = "Courtyard",
                            PropertySpaceTypeId = 10
                        },
                        new
                        {
                            Id = 31,
                            Name = "Fire Pit",
                            PropertySpaceTypeId = 11
                        },
                        new
                        {
                            Id = 32,
                            Name = "Indoor Fireplace",
                            PropertySpaceTypeId = 11
                        },
                        new
                        {
                            Id = 33,
                            Name = "Outdoor Fireplace",
                            PropertySpaceTypeId = 11
                        },
                        new
                        {
                            Id = 34,
                            Name = "Nursery",
                            PropertySpaceTypeId = 12
                        },
                        new
                        {
                            Id = 35,
                            Name = "Changing Station",
                            PropertySpaceTypeId = 12
                        },
                        new
                        {
                            Id = 36,
                            Name = "Crib Corner",
                            PropertySpaceTypeId = 12
                        },
                        new
                        {
                            Id = 37,
                            Name = "Indoor Playroom",
                            PropertySpaceTypeId = 13
                        },
                        new
                        {
                            Id = 38,
                            Name = "Outdoor Playset",
                            PropertySpaceTypeId = 13
                        },
                        new
                        {
                            Id = 39,
                            Name = "Game Room",
                            PropertySpaceTypeId = 13
                        },
                        new
                        {
                            Id = 40,
                            Name = "Walk-in Closet",
                            PropertySpaceTypeId = 14
                        },
                        new
                        {
                            Id = 41,
                            Name = "Wardrobe",
                            PropertySpaceTypeId = 14
                        },
                        new
                        {
                            Id = 42,
                            Name = "Luggage Storage",
                            PropertySpaceTypeId = 14
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PropertySpaceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bedroom"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bathroom"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dining Area"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Workspace"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Laundry Area"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Private Entrance"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Balcony"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Patio"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Backyard"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fire Pit"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Baby Room"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Children’s Play Area"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Closet"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Storage Space"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "house",
                            Name = "House/Apartment"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "bed-single",
                            Name = "Room"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "hotel",
                            Name = "Hotel"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "sun-moon",
                            Name = "Unique & Themed Stays"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "North America"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Asia"
                        },
                        new
                        {
                            Id = 4,
                            Name = "South America"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Africa & Oceania"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Wishlist", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GuestId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PropertyId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nestin.Core.Entities.Amenity", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AmenityCategory", "AmenityCategory")
                        .WithMany("Amenities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmenityCategory");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Country", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Region", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Location", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Property", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Location", "Location")
                        .WithMany("Properties")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.PropertyType", "PropertyType")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Owner");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAmenity", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAvailability", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyFee", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyFees")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyGuest", b =>
                {
                    b.HasOne("Nestin.Core.Entities.GuestType", "GuestType")
                        .WithMany("PropertyGuests")
                        .HasForeignKey("GuestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyGuests")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuestType");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyPhoto", b =>
                {
                    b.HasOne("Nestin.Core.Entities.FileUpload", "FileUpload")
                        .WithOne("PropertyPhoto")
                        .HasForeignKey("Nestin.Core.Entities.PropertyPhoto", "PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyPhotos")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUpload");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItemType", b =>
                {
                    b.HasOne("Nestin.Core.Entities.PropertySpaceType", "PropertySpaceType")
                        .WithMany("PropertySpaceItemTypes")
                        .HasForeignKey("PropertySpaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertySpaceType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Wishlist", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.AmenityCategory", b =>
                {
                    b.Navigation("Amenities");
                });

            modelBuilder.Entity("Nestin.Core.Entities.AppUser", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Country", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Nestin.Core.Entities.FileUpload", b =>
                {
                    b.Navigation("PropertyPhoto");
                });

            modelBuilder.Entity("Nestin.Core.Entities.GuestType", b =>
                {
                    b.Navigation("PropertyGuests");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Location", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Property", b =>
                {
                    b.Navigation("PropertyFees");

                    b.Navigation("PropertyGuests");

                    b.Navigation("PropertyPhotos");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceType", b =>
                {
                    b.Navigation("PropertySpaceItemTypes");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyType", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Region", b =>
                {
                    b.Navigation("Countries");
                });
#pragma warning restore 612, 618
        }
    }
}
