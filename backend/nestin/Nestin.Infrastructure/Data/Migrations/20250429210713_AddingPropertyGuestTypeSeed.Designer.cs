// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nestin.Infrastructure.Data;

#nullable disable

namespace Nestin.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250429210713_AddingPropertyGuestTypeSeed")]
    partial class AddingPropertyGuestTypeSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d35a86a5-72b3-4e7e-bb7f-5ef782b36f7c",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9c75a5df-20a4-4ff1-85a5-bb52f9cf223f",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        },
                        new
                        {
                            Id = "59ebef1f-d79b-4db0-9c5a-304836f14ff1",
                            Name = "Host",
                            NormalizedName = "HOST"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "2dacdb51-fee9-4479-904c-cafe7dca22a6",
                            RoleId = "d35a86a5-72b3-4e7e-bb7f-5ef782b36f7c"
                        },
                        new
                        {
                            UserId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            RoleId = "59ebef1f-d79b-4db0-9c5a-304836f14ff1"
                        },
                        new
                        {
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8",
                            RoleId = "9c75a5df-20a4-4ff1-85a5-bb52f9cf223f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Nestin.Core.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 11,
                            Icon = "wifi",
                            Name = "Wi-Fi"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Icon = "waves",
                            Name = "Pool"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 7,
                            Icon = "air-vent",
                            Name = "Air conditioning"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 9,
                            Icon = "bath",
                            Name = "Bathtub"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 9,
                            Icon = "wind",
                            Name = "Hair dryer"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 9,
                            Icon = "broom",
                            Name = "Cleaning products"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 9,
                            Icon = "droplets",
                            Name = "Shampoo"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 9,
                            Icon = "droplet",
                            Name = "Conditioner"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Icon = "soap",
                            Name = "Body soap"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 9,
                            Icon = "toilet",
                            Name = "Bidet"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 9,
                            Icon = "shower-head",
                            Name = "Outdoor shower"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 9,
                            Icon = "thermometer-sun",
                            Name = "Hot water"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 9,
                            Icon = "flask-round",
                            Name = "Shower gel"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 8,
                            Icon = "sparkles",
                            Name = "Free washer – In unit"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 8,
                            Icon = "shirt",
                            Name = "Hangers"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 8,
                            Icon = "bed-double",
                            Name = "Bed linens"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 8,
                            Icon = "pill",
                            Name = "Extra pillows and blankets"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 8,
                            Icon = "lamp",
                            Name = "Room-darkening shades"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 8,
                            Icon = "flame",
                            Name = "Iron"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 8,
                            Icon = "hanger",
                            Name = "Drying rack for clothing"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 8,
                            Icon = "bug",
                            Name = "Mosquito net"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 8,
                            Icon = "archive",
                            Name = "Clothing storage: closet and dresser"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Icon = "cable",
                            Name = "Ethernet connection"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            Icon = "tv",
                            Name = "42 inch HDTV with Netflix"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 4,
                            Icon = "volume-2",
                            Name = "Sound system with aux"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 4,
                            Icon = "gamepad-2",
                            Name = "Game console"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 4,
                            Icon = "tennis",
                            Name = "Ping pong table"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 4,
                            Icon = "dice-5",
                            Name = "Pool table"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 4,
                            Icon = "book-open",
                            Name = "Books and reading material"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 4,
                            Icon = "film",
                            Name = "Movie theater"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 10,
                            Icon = "baby",
                            Name = "Crib"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 10,
                            Icon = "blocks",
                            Name = "Children’s books and toys"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 10,
                            Icon = "chair",
                            Name = "High chair"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 10,
                            Icon = "baby",
                            Name = "Baby bath"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 10,
                            Icon = "utensils-crossed",
                            Name = "Children’s dinnerware"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 10,
                            Icon = "dice-3",
                            Name = "Board games"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 10,
                            Icon = "door-closed",
                            Name = "Baby safety gates"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 10,
                            Icon = "user",
                            Name = "Babysitter recommendations"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 10,
                            Icon = "puzzle",
                            Name = "Children's playroom"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 7,
                            Icon = "flame",
                            Name = "Indoor fireplace: wood-burning"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 7,
                            Icon = "fan",
                            Name = "Ceiling fan"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 7,
                            Icon = "fan",
                            Name = "Portable fans"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 7,
                            Icon = "thermometer",
                            Name = "Heating"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            Icon = "first-aid-kit",
                            Name = "First aid kit"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            Icon = "laptop",
                            Name = "Dedicated workspace"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 2,
                            Icon = "chef-hat",
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 2,
                            Icon = "fridge",
                            Name = "Refrigerator"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 2,
                            Icon = "utensils-crossed",
                            Name = "Cooking basics"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 2,
                            Icon = "plate",
                            Name = "Dishes and silverware"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 2,
                            Icon = "snowflake",
                            Name = "Freezer"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 2,
                            Icon = "droplet",
                            Name = "Dishwasher"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 2,
                            Icon = "flame",
                            Name = "Stove"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 2,
                            Icon = "microwave",
                            Name = "Oven"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 2,
                            Icon = "kettle",
                            Name = "Hot water kettle"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 2,
                            Icon = "coffee",
                            Name = "Coffee maker"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 2,
                            Icon = "sandwich",
                            Name = "Toaster"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 2,
                            Icon = "sheet",
                            Name = "Baking sheet"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 2,
                            Icon = "blender",
                            Name = "Blender"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 2,
                            Icon = "knife",
                            Name = "Barbecue utensils"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 2,
                            Icon = "coffee",
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 12,
                            Icon = "door-open",
                            Name = "Private entrance"
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 12,
                            Icon = "shirt",
                            Name = "Laundromat nearby"
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 12,
                            Icon = "mountain",
                            Name = "Balacony"
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 12,
                            Icon = "fire-extinguisher",
                            Name = "Fire Pit"
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 12,
                            Icon = "sofa",
                            Name = "Outdoor furniture"
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 13,
                            Icon = "paw-print",
                            Name = "Pets Allowed"
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 6,
                            Icon = "car",
                            Name = "Free street parking"
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 6,
                            Icon = "car",
                            Name = "Free street On premises"
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 13,
                            Icon = "calendar",
                            Name = "Long term stays allowed"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.AmenityCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AmenityCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Essentials"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kitchen and dining"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Home safety"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Outdoor"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Parking and facilities"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Heating and cooling"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bedroom and laundry"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Bathroom"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Internet and office"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Location features"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Services"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2dacdb51-fee9-4479-904c-cafe7dca22a6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2bc5ed7c-f23c-41b2-8f24-6cde1379cf70",
                            Email = "admin@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEC7spMPg5RTE/+JwhaFMZ9D4qe125yj/pgHQRdpqvzZn/yUZ56sxPK6NYZ+WPproog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2O776OTQMPGHNUKGKGVD7EK56EWEHWJ4",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3bc5ed7c-f23c-41b2-8f24-6cde1379cf70",
                            Email = "host@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOST@EMAIL.COM",
                            NormalizedUserName = "HOST",
                            PasswordHash = "AQAAAAIAAYagAAAAEC7spMPg5RTE/+JwhaFMZ9D4qe125yj/pgHQRdpqvzZn/yUZ56sxPK6NYZ+WPproog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "HOSTSTAMP",
                            TwoFactorEnabled = false,
                            UserName = "host"
                        },
                        new
                        {
                            Id = "4dacdb51-fee9-4479-904c-cafe7dca22a8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bc5ed7c-f23c-41b2-8f24-6cde1379cf70",
                            Email = "guest@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "GUEST@EMAIL.COM",
                            NormalizedUserName = "GUEST",
                            PasswordHash = "AQAAAAIAAYagAAAAEC7spMPg5RTE/+JwhaFMZ9D4qe125yj/pgHQRdpqvzZn/yUZ56sxPK6NYZ+WPproog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "GUESTSTAMP",
                            TwoFactorEnabled = false,
                            UserName = "guest"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Booking", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalFees")
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CheckIn");

                    b.HasIndex("CheckOut");

                    b.HasIndex("PropertyId");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = "7f6b0bb5-e99e-47c7-8d75-b5d46284e241",
                            CheckIn = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 3000m,
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            Status = "Pending",
                            TotalFees = 89981m,
                            UpdatedAt = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "49b69c8a-8b4b-4021-85f4-ff273b70c85d",
                            CheckIn = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 5000m,
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            Status = "Confirmed",
                            TotalFees = 1200m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "438d19e1-66fc-4219-9e3d-0519c9c27332",
                            CheckIn = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 5000m,
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            Status = "Confirmed",
                            TotalFees = 1200m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "e42b9075-d67c-4b5f-8316-bde33ef7272a",
                            CheckIn = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 5000m,
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            Status = "Confirmed",
                            TotalFees = 1200m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "b6d7b477-9b64-4a79-b7a3-b01c45378d5e",
                            CheckIn = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 1000m,
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            Status = "Canceled",
                            TotalFees = 1200m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "0fe8f9f5-7751-460b-b39f-dab6946c0ba2",
                            CheckIn = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 2120m,
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            Status = "Confirmed",
                            TotalFees = 1900m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "7b479ff7-22c5-46ad-85a3-204b502e5d0b",
                            CheckIn = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 3000m,
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            Status = "Pending",
                            TotalFees = 1900m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "8a45a4b6-24ab-4a5b-8ef3-17b7de41295a",
                            CheckIn = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 3000m,
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            Status = "Canceled",
                            TotalFees = 1900m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            Id = "d2bc71b9-d703-43fc-a90f-bf22f29a7b4e",
                            CheckIn = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerNight = 3000m,
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            Status = "Confirmed",
                            TotalFees = 2000m,
                            UpdatedAt = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.BookingGuest", b =>
                {
                    b.Property<string>("BookingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GuestTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuestCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("BookingId", "GuestTypeId");

                    b.HasIndex("BookingId");

                    b.HasIndex("GuestTypeId");

                    b.ToTable("BookingGuests");

                    b.HasData(
                        new
                        {
                            BookingId = "7f6b0bb5-e99e-47c7-8d75-b5d46284e241",
                            GuestTypeId = 1,
                            GuestCount = 3
                        },
                        new
                        {
                            BookingId = "49b69c8a-8b4b-4021-85f4-ff273b70c85d",
                            GuestTypeId = 2,
                            GuestCount = 3
                        },
                        new
                        {
                            BookingId = "438d19e1-66fc-4219-9e3d-0519c9c27332",
                            GuestTypeId = 3,
                            GuestCount = 2
                        },
                        new
                        {
                            BookingId = "e42b9075-d67c-4b5f-8316-bde33ef7272a",
                            GuestTypeId = 1,
                            GuestCount = 2
                        },
                        new
                        {
                            BookingId = "b6d7b477-9b64-4a79-b7a3-b01c45378d5e",
                            GuestTypeId = 2,
                            GuestCount = 1
                        },
                        new
                        {
                            BookingId = "0fe8f9f5-7751-460b-b39f-dab6946c0ba2",
                            GuestTypeId = 2,
                            GuestCount = 1
                        },
                        new
                        {
                            BookingId = "7b479ff7-22c5-46ad-85a3-204b502e5d0b",
                            GuestTypeId = 4,
                            GuestCount = 2
                        },
                        new
                        {
                            BookingId = "8a45a4b6-24ab-4a5b-8ef3-17b7de41295a",
                            GuestTypeId = 1,
                            GuestCount = 2
                        },
                        new
                        {
                            BookingId = "d2bc71b9-d703-43fc-a90f-bf22f29a7b4e",
                            GuestTypeId = 2,
                            GuestCount = 2
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afghanistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Åland Islands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Albania",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Algeria",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "American Samoa",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Andorra",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Angola",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Anguilla",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Antarctica",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Antigua and Barbuda",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Argentina",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Armenia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "Aruba",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Australia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Austria",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "Azerbaijan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bahamas",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 18,
                            Name = "Bahrain",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 19,
                            Name = "Bangladesh",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Barbados",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "Belarus",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Belgium",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Belize",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 24,
                            Name = "Benin",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 25,
                            Name = "Bermuda",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 26,
                            Name = "Bhutan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 27,
                            Name = "Bolivia",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 28,
                            Name = "Bosnia and Herzegovina",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 29,
                            Name = "Botswana",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 30,
                            Name = "Bouvet Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 31,
                            Name = "Brazil",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 32,
                            Name = "British Indian Ocean Territory",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 33,
                            Name = "Brunei Darussalam",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 34,
                            Name = "Bulgaria",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 35,
                            Name = "Burkina Faso",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 36,
                            Name = "Burundi",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 37,
                            Name = "Cambodia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 38,
                            Name = "Cameroon",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 39,
                            Name = "Canada",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 40,
                            Name = "Cape Verde",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 41,
                            Name = "Cayman Islands",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 42,
                            Name = "Central African Republic",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 43,
                            Name = "Chad",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 44,
                            Name = "Chile",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 45,
                            Name = "China",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 46,
                            Name = "Christmas Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 47,
                            Name = "Cocos (Keeling) Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 48,
                            Name = "Colombia",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 49,
                            Name = "Comoros",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 50,
                            Name = "Congo",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 51,
                            Name = "Congo, The Democratic Republic of the",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 52,
                            Name = "Cook Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 53,
                            Name = "Costa Rica",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 54,
                            Name = "Cote D'Ivoire",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 55,
                            Name = "Croatia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 56,
                            Name = "Cuba",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 57,
                            Name = "Cyprus",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 58,
                            Name = "Czech Republic",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 59,
                            Name = "Denmark",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 60,
                            Name = "Djibouti",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 61,
                            Name = "Dominica",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 62,
                            Name = "Dominican Republic",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 63,
                            Name = "Ecuador",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 64,
                            Name = "Egypt",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 65,
                            Name = "El Salvador",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 66,
                            Name = "Equatorial Guinea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 67,
                            Name = "Eritrea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 68,
                            Name = "Estonia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 69,
                            Name = "Ethiopia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 70,
                            Name = "Falkland Islands (Malvinas)",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 71,
                            Name = "Faroe Islands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 72,
                            Name = "Fiji",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 73,
                            Name = "Finland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 74,
                            Name = "France",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 75,
                            Name = "French Guiana",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 76,
                            Name = "French Polynesia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 77,
                            Name = "French Southern Territories",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 78,
                            Name = "Gabon",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 79,
                            Name = "Gambia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 80,
                            Name = "Georgia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 81,
                            Name = "Germany",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 82,
                            Name = "Ghana",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 83,
                            Name = "Gibraltar",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 84,
                            Name = "Greece",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 85,
                            Name = "Greenland",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 86,
                            Name = "Grenada",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 87,
                            Name = "Guadeloupe",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 88,
                            Name = "Guam",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 89,
                            Name = "Guatemala",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 90,
                            Name = "Guernsey",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 91,
                            Name = "Guinea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 92,
                            Name = "Guinea-Bissau",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 93,
                            Name = "Guyana",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 94,
                            Name = "Haiti",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 95,
                            Name = "Heard Island and McDonald Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 96,
                            Name = "Honduras",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 97,
                            Name = "Hong Kong",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 98,
                            Name = "Hungary",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 99,
                            Name = "Iceland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 100,
                            Name = "India",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 101,
                            Name = "Indonesia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 102,
                            Name = "Iran",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 103,
                            Name = "Iraq",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 104,
                            Name = "Ireland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 105,
                            Name = "Israel",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 106,
                            Name = "Italy",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 107,
                            Name = "Jamaica",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 108,
                            Name = "Japan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 109,
                            Name = "Jersey",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 110,
                            Name = "Jordan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 111,
                            Name = "Kazakhstan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 112,
                            Name = "Kenya",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 113,
                            Name = "Kiribati",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 114,
                            Name = "Korea, Democratic People's Republic of",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 115,
                            Name = "Korea, Republic of",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 116,
                            Name = "Kuwait",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 117,
                            Name = "Kyrgyzstan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 118,
                            Name = "Lao People's Democratic Republic",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 119,
                            Name = "Latvia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 120,
                            Name = "Lebanon",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 121,
                            Name = "Lesotho",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 122,
                            Name = "Liberia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 123,
                            Name = "Libya",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 124,
                            Name = "Liechtenstein",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 125,
                            Name = "Lithuania",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 126,
                            Name = "Luxembourg",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 127,
                            Name = "Macao",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 128,
                            Name = "Madagascar",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 129,
                            Name = "Malawi",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 130,
                            Name = "Malaysia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 131,
                            Name = "Maldives",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 132,
                            Name = "Mali",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 133,
                            Name = "Malta",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 134,
                            Name = "Marshall Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 135,
                            Name = "Martinique",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 136,
                            Name = "Mauritania",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 137,
                            Name = "Mauritius",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 138,
                            Name = "Mayotte",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 139,
                            Name = "Mexico",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 140,
                            Name = "Micronesia (Federated States of)",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 141,
                            Name = "Moldova (Republic of)",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 142,
                            Name = "Monaco",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 143,
                            Name = "Mongolia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 144,
                            Name = "Montenegro",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 145,
                            Name = "Montserrat",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 146,
                            Name = "Morocco",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 147,
                            Name = "Mozambique",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 148,
                            Name = "Myanmar",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 149,
                            Name = "Namibia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 150,
                            Name = "Nauru",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 151,
                            Name = "Nepal",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 152,
                            Name = "Netherlands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 153,
                            Name = "New Caledonia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 154,
                            Name = "New Zealand",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 155,
                            Name = "Nicaragua",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 156,
                            Name = "Niger",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 157,
                            Name = "Nigeria",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 158,
                            Name = "Niue",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 159,
                            Name = "Norfolk Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 160,
                            Name = "North Macedonia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 161,
                            Name = "Northern Mariana Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 162,
                            Name = "Norway",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 163,
                            Name = "Oman",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 164,
                            Name = "Pakistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 165,
                            Name = "Palau",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 166,
                            Name = "Palestine",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 167,
                            Name = "Panama",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 168,
                            Name = "Papua New Guinea",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 169,
                            Name = "Paraguay",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 170,
                            Name = "Peru",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 171,
                            Name = "Philippines",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 172,
                            Name = "Pitcairn",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 173,
                            Name = "Poland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 174,
                            Name = "Portugal",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 175,
                            Name = "Puerto Rico",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 176,
                            Name = "Qatar",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 177,
                            Name = "Romania",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 178,
                            Name = "Russian Federation",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 179,
                            Name = "Rwanda",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 180,
                            Name = "Réunion",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 181,
                            Name = "Saint Barthélemy",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 182,
                            Name = "Saint Helena, Ascension and Tristan da Cunha",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 183,
                            Name = "Saint Kitts and Nevis",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 184,
                            Name = "Saint Lucia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 185,
                            Name = "Saint Martin",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 186,
                            Name = "Saint Pierre and Miquelon",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 187,
                            Name = "Saint Vincent and the Grenadines",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 188,
                            Name = "Samoa",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 189,
                            Name = "San Marino",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 190,
                            Name = "Sao Tome and Principe",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 191,
                            Name = "Saudi Arabia",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 192,
                            Name = "Senegal",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 193,
                            Name = "Serbia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 194,
                            Name = "Seychelles",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 195,
                            Name = "Sierra Leone",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 196,
                            Name = "Singapore",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 197,
                            Name = "Sint Maarten",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 198,
                            Name = "Slovakia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 199,
                            Name = "Slovenia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 200,
                            Name = "Solomon Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 201,
                            Name = "Somalia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 202,
                            Name = "South Africa",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 203,
                            Name = "South Georgia and the South Sandwich Islands",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 204,
                            Name = "South Sudan",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 205,
                            Name = "Spain",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 206,
                            Name = "Sri Lanka",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 207,
                            Name = "Sudan",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 208,
                            Name = "Suriname",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 209,
                            Name = "Svalbard",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 210,
                            Name = "Swaziland",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 211,
                            Name = "Sweden",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 212,
                            Name = "Switzerland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 213,
                            Name = "Syrian Arab Republic",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 214,
                            Name = "Taiwan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 215,
                            Name = "Tajikistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 216,
                            Name = "Tanzania (United Republic of)",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 217,
                            Name = "Thailand",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 218,
                            Name = "Timor-Leste",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 219,
                            Name = "Togo",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 220,
                            Name = "Tokelau",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 221,
                            Name = "Tonga",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 222,
                            Name = "Trinidad and Tobago",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 223,
                            Name = "Tunisia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 224,
                            Name = "Turkey",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 225,
                            Name = "Turkmenistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 226,
                            Name = "Tuvalu",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 227,
                            Name = "Uganda",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 228,
                            Name = "Ukraine",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 229,
                            Name = "United Arab Emirates",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 230,
                            Name = "United Kingdom of Great Britain and Northern Ireland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 231,
                            Name = "United States of America",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 232,
                            Name = "Uruguay",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 233,
                            Name = "Uzbekistan",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 234,
                            Name = "Vanuatu",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 235,
                            Name = "Venezuela (Bolivarian Republic of)",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 236,
                            Name = "Viet Nam",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 237,
                            Name = "Western Sahara",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 238,
                            Name = "Yemen",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 239,
                            Name = "Zambia",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 240,
                            Name = "Zimbabwe",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 241,
                            Name = "Antarctica",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 242,
                            Name = "Ascension Island",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 243,
                            Name = "French Guiana",
                            RegionId = 5
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.FavoriteProperty", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PropertyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteProperties");

                    b.HasData(
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            UserId = "4dacdb51-fee9-4479-904c-cafe7dca22a8"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.FileUpload", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("FileUploads");

                    b.HasData(
                        new
                        {
                            Id = "b455bb0a-69a3-4024-b5fa-5a49323e58fd",
                            Path = "FileUploads/egy1.avif"
                        },
                        new
                        {
                            Id = "dc16e3d2-16ed-4ff5-b9c2-27a1e8b5ccbe",
                            Path = "FileUploads/egy2.avif"
                        },
                        new
                        {
                            Id = "4b0f81f1-9bc0-45c6-988e-1a4fd270b3e0",
                            Path = "FileUploads/egy3.avif"
                        },
                        new
                        {
                            Id = "2ac68b52-e7b6-4bb7-9f8e-49aa7f2b2b6c",
                            Path = "FileUploads/italy1.webp"
                        },
                        new
                        {
                            Id = "69c6c01e-65b3-4cf7-bbc7-2e94272b658a",
                            Path = "FileUploads/italy2.avif"
                        },
                        new
                        {
                            Id = "95cde2b1-305e-4c13-9293-8c4c8f7c8b9f",
                            Path = "FileUploads/italy3.avif"
                        },
                        new
                        {
                            Id = "7a18064f-b6cb-4d58-a51b-0e8a74eac7a4",
                            Path = "FileUploads/makkah1.avif"
                        },
                        new
                        {
                            Id = "4dfe3d56-2d34-4a6b-9cb5-f7a5a2dd8c28",
                            Path = "FileUploads/makkah2.avif"
                        },
                        new
                        {
                            Id = "6c54a231-b88f-409f-b5d5-170180930186",
                            Path = "FileUploads/makkah3.avif"
                        },
                        new
                        {
                            Id = "26d418bb-0f90-4f3c-b339-7dd5c31b5e99",
                            Path = "FileUploads/california1.jpeg"
                        },
                        new
                        {
                            Id = "a4c0d40d-e90e-4b14-8a2a-5ac0212be9b1",
                            Path = "FileUploads/california2.jpeg"
                        },
                        new
                        {
                            Id = "89f65612-5023-489e-9604-2f01074abf0c",
                            Path = "FileUploads/california3.avif"
                        },
                        new
                        {
                            Id = "b21f8f4f-6d95-4f60-81b4-56d2ef017a08",
                            Path = "FileUploads/brazil1.avif"
                        },
                        new
                        {
                            Id = "e34a2808-38df-4e47-8c3e-d6e3f2712f11",
                            Path = "FileUploads/brazil2.avif"
                        },
                        new
                        {
                            Id = "5b742ed2-28d9-4e3b-8125-6e9c4587a0d3",
                            Path = "FileUploads/brazil3.avif"
                        },
                        new
                        {
                            Id = "2cf95d6d-63ae-4b97-8101-c6c5e8227b6d",
                            Path = "FileUploads/barcelona1.avif"
                        },
                        new
                        {
                            Id = "ce9e31d6-6553-4214-8b94-fb9c8f3065ed",
                            Path = "FileUploads/barcelona2.avif"
                        },
                        new
                        {
                            Id = "5e2e82a1-4893-4a63-9375-d73f7a09d7c5",
                            Path = "FileUploads/barcelona3.avif"
                        },
                        new
                        {
                            Id = "7d861c0c-011d-4b2a-8ce5-f5b1f0b81d01",
                            Path = "FileUploads/jordan1.avif"
                        },
                        new
                        {
                            Id = "fbc177de-bf4c-4b75-a1f6-884d05ce6c9f",
                            Path = "FileUploads/jordan2.avif"
                        },
                        new
                        {
                            Id = "51d1e109-dccf-45fd-9f15-bbd3c0b7fcd5",
                            Path = "FileUploads/jordan3.avif"
                        },
                        new
                        {
                            Id = "6c79893d-f97f-4fc6-b0c3-4ebfcab3f85f",
                            Path = "FileUploads/france1.avif"
                        },
                        new
                        {
                            Id = "98a76538-918f-4e60-9c01-b364e0e1891f",
                            Path = "FileUploads/france2.avif"
                        },
                        new
                        {
                            Id = "f3885b77-0f9e-4ec3-9b3e-cbc194a07d7f",
                            Path = "FileUploads/france3.avif"
                        },
                        new
                        {
                            Id = "da2afaf9-b1df-4daf-bb44-3d6a79be4a17",
                            Path = "FileUploads/portugal1.avif"
                        },
                        new
                        {
                            Id = "1cc7082f-8324-4888-b903-9d8ed2ffd144",
                            Path = "FileUploads/portugal2.avif"
                        },
                        new
                        {
                            Id = "11010e1b-3c99-4d25-a176-9b826b19ec88",
                            Path = "FileUploads/portugal3.avif"
                        },
                        new
                        {
                            Id = "a6d2fafb-6490-4f6f-a4c7-f42fdde98bf2",
                            Path = "FileUploads/soul1.avif"
                        },
                        new
                        {
                            Id = "7ae244c8-42a8-422c-9be6-b809c1b427f6",
                            Path = "FileUploads/soul2.avif"
                        },
                        new
                        {
                            Id = "ab39dc17-5108-425b-8350-1995323ba1a1",
                            Path = "FileUploads/soul3.avif"
                        },
                        new
                        {
                            Id = "55a42f5d-4934-41df-8077-4ea9654c8d4f",
                            Path = "FileUploads/saf1.avif"
                        },
                        new
                        {
                            Id = "b01df5ef-3951-4e4c-80c5-00e10029a682",
                            Path = "FileUploads/saf2.avif"
                        },
                        new
                        {
                            Id = "68b3f994-ed3d-461e-89b2-13ebe89d53b6",
                            Path = "FileUploads/saf3.avif"
                        },
                        new
                        {
                            Id = "0184da01-3f04-431a-821b-863db48eee6b",
                            Path = "FileUploads/maadi1.avif"
                        },
                        new
                        {
                            Id = "87668883-00e2-4d99-9dea-b612fb1f09fb",
                            Path = "FileUploads/maadi2.avif"
                        },
                        new
                        {
                            Id = "aca8279a-04bd-4277-8370-1338beb17581",
                            Path = "FileUploads/maadi3.avif"
                        },
                        new
                        {
                            Id = "1d0aa7e5-30b6-42f6-aa21-11fed6d12c9a",
                            Path = "FileUploads/canada1.avif"
                        },
                        new
                        {
                            Id = "160b2604-8211-42b5-9f78-4360d5a71ee9",
                            Path = "FileUploads/canada2.avif"
                        },
                        new
                        {
                            Id = "9f90c24f-0a95-46a3-a2e2-a0688c460a23",
                            Path = "FileUploads/canada3.avif"
                        },
                        new
                        {
                            Id = "84d8e12a-4754-4825-b0fc-2b43981f6ba0",
                            Path = "FileUploads/vg1.avif"
                        },
                        new
                        {
                            Id = "e0f27e50-9e45-489b-90d6-f62211f67f12",
                            Path = "FileUploads/vg2.avif"
                        },
                        new
                        {
                            Id = "caf5622f-99a6-4927-a913-48d66437de5d",
                            Path = "FileUploads/vg3.avif"
                        },
                        new
                        {
                            Id = "e3d6bbae-2087-4269-b6ca-784e3301cce0",
                            Path = "FileUploads/tun1.avif"
                        },
                        new
                        {
                            Id = "aac5407d-a994-4c3e-a1ff-b7646d79162a",
                            Path = "FileUploads/tun2webp.webp"
                        },
                        new
                        {
                            Id = "a05afc7a-9127-4a33-839c-908e1f47a4ae",
                            Path = "FileUploads/tun3.avif"
                        },
                        new
                        {
                            Id = "90cd8c79-cc01-4edf-85b8-9931cd3fc772",
                            Path = "FileUploads/Belg1.avif"
                        },
                        new
                        {
                            Id = "3588517b-0a71-4d29-ad8c-906a8e545d00",
                            Path = "FileUploads/Belg2.avif"
                        },
                        new
                        {
                            Id = "da734851-2db8-4541-a788-b675b7560eec",
                            Path = "FileUploads/Belg3.avif"
                        },
                        new
                        {
                            Id = "9ea371c2-fefe-423f-953c-c744a33d5fb9",
                            Path = "FileUploads/Arg1.avif"
                        },
                        new
                        {
                            Id = "4c376b94-d74f-4472-b1a5-4c3d51df56d8",
                            Path = "FileUploads/Arg2.avif"
                        },
                        new
                        {
                            Id = "e56c967f-ee64-4e53-b0e6-1b1342baf2da",
                            Path = "FileUploads/Arg3.jpg"
                        },
                        new
                        {
                            Id = "9b0d97e4-6dad-4e5b-893c-38aaff4a50e2",
                            Path = "FileUploads/Nig1.avif"
                        },
                        new
                        {
                            Id = "9201fad7-d63f-4dbf-84f1-adb25c451e9e",
                            Path = "FileUploads/Nig2.avif"
                        },
                        new
                        {
                            Id = "303c12b0-baca-42d4-824e-d84b940d317a",
                            Path = "FileUploads/Nig3.avif"
                        },
                        new
                        {
                            Id = "0f18b242-e627-45eb-a22d-516722b7c78c",
                            Path = "FileUploads/Vit1.avif"
                        },
                        new
                        {
                            Id = "a2529147-026b-4b8b-a811-cb18989a8129",
                            Path = "FileUploads/Vit2.avif"
                        },
                        new
                        {
                            Id = "301f7e01-cc25-48ed-90aa-fafe16fce3b5",
                            Path = "FileUploads/Vit3.avif"
                        },
                        new
                        {
                            Id = "08f3b524-1ff0-4d1f-a4f9-a50c0d6ee717",
                            Path = "FileUploads/Dub1.avif"
                        },
                        new
                        {
                            Id = "1389e44f-240f-4eed-bde3-93623d7c41d1",
                            Path = "FileUploads/Dub2.avif"
                        },
                        new
                        {
                            Id = "ff840d01-6eab-45fb-a911-674725a89003",
                            Path = "FileUploads/Dub3.avif"
                        },
                        new
                        {
                            Id = "f3db201e-fddd-4278-9beb-96863dde2f0f",
                            Path = "FileUploads/Morc1.webp"
                        },
                        new
                        {
                            Id = "82da2e46-5e65-4ad8-97e9-ad10fdd63171",
                            Path = "FileUploads/Mroc2.avif"
                        },
                        new
                        {
                            Id = "e4a28523-f13c-431a-8af5-2ebd307f1a85",
                            Path = "FileUploads/Mroc3.avif"
                        },
                        new
                        {
                            Id = "6f572d60-4465-40a4-8b63-7bb2eb876cbd",
                            Path = "FileUploads/Colm1.avif"
                        },
                        new
                        {
                            Id = "5c8fa3e9-2590-44d4-8e36-ee7f3c526b37",
                            Path = "FileUploads/Colm2.avif"
                        },
                        new
                        {
                            Id = "3777d149-0028-4ea1-ba62-db41d33939f5",
                            Path = "FileUploads/Colm3.avif"
                        },
                        new
                        {
                            Id = "1fb978f8-fb49-4f38-8acb-345be5c86bc7",
                            Path = "FileUploads/indon1.jpeg"
                        },
                        new
                        {
                            Id = "ba47797b-da79-47a0-8014-48e5422f0500",
                            Path = "FileUploads/indon2.jpeg"
                        },
                        new
                        {
                            Id = "e019ead5-3b99-4f78-a84b-23b34ba27e26",
                            Path = "FileUploads/indon3.jpeg"
                        },
                        new
                        {
                            Id = "f4b528d3-1204-4ccc-af05-2a39346d7ace",
                            Path = "FileUploads/Rom1.avif"
                        },
                        new
                        {
                            Id = "a73860df-b173-4d4d-b834-124f19d93a20e",
                            Path = "FileUploads/Rom2.avif"
                        },
                        new
                        {
                            Id = "3cb5e765-921f-4e0e-97be-b6d1e4c762cf",
                            Path = "FileUploads/Rom3.avif"
                        },
                        new
                        {
                            Id = "ec263c4f-fcc3-4d72-805e-d0b116e2cdd7",
                            Path = "FileUploads/Turk1.avif"
                        },
                        new
                        {
                            Id = "2f50cb6f-8aeb-4428-8279-7c3a11d18232",
                            Path = "FileUploads/Turk2.avif"
                        },
                        new
                        {
                            Id = "fbb7ade9-39b8-4b3b-abb5-b38fc1f70471",
                            Path = "FileUploads/Turk3.avif"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.GuestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GuestTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adults"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Childern"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Infants"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pets"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.HostUpgradeRequest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BackPhotoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FrontPhotoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("BackPhotoId")
                        .IsUnique();

                    b.HasIndex("FrontPhotoId")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.ToTable("HostUpgradeRequests");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 64,
                            Name = "Nazlet El-Semman, Giza Governorate"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 106,
                            Name = "Milan, Lombardia"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 191,
                            Name = "Makkah, Makkah Province"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 231,
                            Name = "Yucca Valley, California"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 31,
                            Name = "Salvador, Bahia"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 205,
                            Name = "Barcelona, Catalunya"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 110,
                            Name = "Wadi Rum Village, Aqaba Governorate"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 74,
                            Name = "Tanneron, Provence-Alpes-Côte d'Azur"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 174,
                            Name = "Windmill in Ponta Delgada, Portugal"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 114,
                            Name = "Soul ,South Korea  "
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 202,
                            Name = "Cape Town, Western Cape, South Africa"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 64,
                            Name = "Maadi , Egypt"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 39,
                            Name = "Courtenay, Canada"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 231,
                            Name = "Virginia, United States"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 223,
                            Name = " Gammarth, Tunisia"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 22,
                            Name = "Jodoigne, Belgium"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 11,
                            Name = "Buenos Aires, Argentina"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 157,
                            Name = "Lekki, Nigeria"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 236,
                            Name = "Lâm Thượng, Vietnam"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 229,
                            Name = "Dubai, United Arab Emirates"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 146,
                            Name = "Imlil, Morocco"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 48,
                            Name = " Sasaima,  Colombia"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 101,
                            Name = "Kabupaten Gianyar, Indonesia"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 106,
                            Name = "Rome, Italy"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 224,
                            Name = "Bodrum, Turkey"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Payment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("usd");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("StripePaymentIntentId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StripeSessionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("Status");

                    b.HasIndex("StripePaymentIntentId");

                    b.HasIndex("StripeSessionId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Property", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseRules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SafteyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PropertyTypeId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            CancellationPolicy = "Free cancellation before May 28 , Cancel before check-in on Jun 2 for a partial refund.",
                            Description = "Enjoy your stay with Panoramic View of the giza pyramids and sphinx .Yes! view and pictures are all 100% real. (Be sure to check out our other listings too) Indulge in a stunning view of all the Giza Pyramids from anywhere within this contemporary oriental studio or while relaxing in the Jacuzzi. It is also a 10 min walk from the Pyramids entrance gate. To make the most of your trip, make sure to check out our experiences!We're committed to providing our guests the magical hospitality",
                            HouseRules = "Check-in after 2:00 PM , Checkout before 11:00 AM , 2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 29.98333m,
                            LocationId = 1,
                            Longitude = 31.13333m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 100m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No Carbon monoxide alarm , No Smoke alarm ",
                            Title = "Entire rental unit in Nazlet El-Semman, Egypt"
                        },
                        new
                        {
                            Id = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            CancellationPolicy = "Free cancellation before May 17 , Cancel before check-in on May 18 for a partial refund.",
                            Description = "Elegant apartment inside the famous castle in Nolo, a royal choice right in the center of Milan A few steps away is the metro (M1 red for the Duomo 10 min), 10 minutes' walk for the central station. The apartment is well connected by trains, trams and buses The area is well supplied with restaurants, supermarkets, bars, clubs, etc. Complete comfort:82 Smart TV, Netflix, prime, wifi, dishwasher, kitchen, coffee machine The stay is included with a complete reception service",
                            HouseRules = "Check-in: 3:00 PM - 11:00PM ,Checkout before 11:00 AM ,4 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 45.46427m,
                            LocationId = 2,
                            Longitude = 9.18951m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 250m,
                            PropertyTypeId = 3,
                            SafteyInfo = "Carbon monoxide alarm ,Smoke alarm installed",
                            Title = "Milano Duomo center 10 min Flat inside a castle"
                        },
                        new
                        {
                            Id = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            CancellationPolicy = "Free cancellation before May 17 , Cancel before check-in on May 18 for a partial refund.",
                            Description = "Relax with this listing Small 2-room 7-bed apartment near Alharam Al Makkah with a maximum of 10 to 12 minutes' walk away The ears and prayer are also heard inside the rooms and the window appears from the window of the Haram Al-Sharif .We offer a Surface kitchen with tea and coffee supplies, a mini fridge, a microwave, a water kettle and more A washing machine is available and we provide toiletries from towels, shampoo, lotion, soap, and more We provide a wheelchair ,wi-fi .This place is in a high tower where the apartment is located on the 17th floor Wish you a unique and pleasant stay",
                            HouseRules = "Check-in after 3:00 PM , Checkout before 12:00 PM , 7 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 21.4266m,
                            LocationId = 3,
                            Longitude = 39.8256m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 90m,
                            PropertyTypeId = 1,
                            SafteyInfo = "Carbon monoxide alarm ,Smoke alarm installed",
                            Title = "Rent an apartment near Alhar Mecca"
                        },
                        new
                        {
                            Id = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            CancellationPolicy = "Free cancellation before May 17 , Cancel before check-in on May 18 for a partial refund.",
                            Description = "Updated pool and spa! Sitting on 100 acres, Hawkeye House, featured on the cover of the May 2019 issue of Dwell Magazine, is an off grid Geodesic Dome. It has a 40 foot pool and hot tub that you will have to see to believe. This unique and modern home has been fully remodeled with an attention to both comfort and detail. Amazing hikes and privacy are abundant here. Most people never want to leave the property",
                            HouseRules = "Check-in after 3:00 PM , Checkout before 12:00 PM , 7 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 34.114174m,
                            LocationId = 4,
                            Longitude = -116.432236m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 110m,
                            PropertyTypeId = 2,
                            SafteyInfo = "Carbon monoxide alarm ,Smoke alarm installed",
                            Title = "Hawkeye Dome - New Pool and Spa"
                        },
                        new
                        {
                            Id = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            CancellationPolicy = "Free cancellation before Oct 22 , Cancel before check-in on Oct 23 for a partial refund.",
                            Description = "Romantic Loft with mezzanine and large balcony in front of the sea, double bed and 1 single bed, tv, wi-fi, fan, cabinet modern decoration, 180 degree terrace to the sea, equipped kitchen, bathroom, total comfort and privacy, fourth floor without elevator, 5 minutes from the carnival circuit, Noble Quarter of the city. Between the Surf and Paciencia beaches. Total security. The most beautiful sunset in Salvador",
                            HouseRules = "3 guests maximum , Pets allowed",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = -12.9711m,
                            LocationId = 5,
                            Longitude = -38.5108m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 130m,
                            PropertyTypeId = 1,
                            SafteyInfo = "Carbon monoxide alarm not reported , Smoke alarm not reported , Exterior security cameras on property",
                            Title = "(4) charming oceanfront loft!"
                        },
                        new
                        {
                            Id = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            CancellationPolicy = "Free cancellation before Jun 3. Cancel before check-in on Jun 4 for a partial refund",
                            Description = "Set in an architectural prize-winning building, this modern Barcelona apartment beauty has impressive detail throughout. Ceiling-to-floor sloped windows, wood floor, and other soft designer textures accentuate this spectacular space. It is cozy and welcoming but with a very hip, urban edge.Design enthusiasts and those looking for that modern Barcelona feel will love the apartment. However, high-comfort and proximity to the Sagrada Familia suits all tastes.",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 41.3888m,
                            LocationId = 6,
                            Longitude = 2.159m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 310m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm , Heights without rails or protectio",
                            Title = "Sunny and cozy Apartment Sagrada Familia"
                        },
                        new
                        {
                            Id = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            CancellationPolicy = "Free cancellation before Jun 3. Cancel before check-in on Jun 4 for a partial refund",
                            Description = "To give you the best experience of the authentic Bedouin life style, we will gather around the fire, cook our traditional food and tell you stories of our ancestors, while looking at the sky full of stars.Without a lie, this experience will be very special, if you used to cities and crowd in your everyday life.We created the space in a very simple, traditional and nomadic way. The Cave is inside the red rocks, waterproof and safe from all sides. Here you will have the whole Desert for yourself to get away from normal life, to relax, be in a quiet environment and meditate.",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 29.5726m,
                            LocationId = 7,
                            Longitude = 35.4186m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 220m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm , Heights without rails or protectio",
                            Title = "Wadi Rum Sunset Cave"
                        },
                        new
                        {
                            Id = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            CancellationPolicy = "Free cancellation before Jun 3. Cancel before check-in on Jun 4 for a partial refund",
                            Description = "Interior designer's own guesthouse, this unique place has a style all its own. Escape the ordinary and immerse yourself in comfort, calm and luxury at our charming bergerie, a conversion from a shepherd's old stone house! Nestled in the heart of the largest mimosa forest in Europe, overlooking the Cotes d'Azur and lower Alps, our tastefully designed retreat offers everything you need for an unforgettable tranquillity.We welcome up to 4 adults and have a small mezzanine for children.",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 43.5914m,
                            LocationId = 8,
                            Longitude = 6.8761m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 132m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm , Heights without rails or protectio",
                            Title = "New! The View: See to Mouintain (with pool)"
                        },
                        new
                        {
                            Id = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            CancellationPolicy = "Free cancellation for 48 hours , Cancel before Jan 13 for a partial refund.",
                            Description = "Built in the 19th century, with a 360 degrees view over the sea and surroundings on the top floor.It features a Bedroom, a very well-decorated living room with kitchenette, and a WC.Free WiFi, air conditioning, Led TV and DVD player.Private parking inside the premises, providing extra security.Perfect for an unforgettable honeymoon experience.",
                            HouseRules = "Check-in: 3:00 PM - 5:00 PM ,Checkout before 10:00 AM ,2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 37.7428m,
                            LocationId = 9,
                            Longitude = 25.6806m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 200m,
                            PropertyTypeId = 4,
                            SafteyInfo = "Climbing or play structure , Carbon monoxide alarmSmoke alarm",
                            Title = "Moinho das Feteiras | The Mill House"
                        },
                        new
                        {
                            Id = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            CancellationPolicy = "Free cancellation before May 19. Cancel before check-in on May 24 for a partial refund.",
                            Description = "This is a guitar-shaped country house located in Icheon, a ceramic art village. It is a private house with a spacious terrace on the 3rd floor of the Sera Guitar Culture Center, famous for its unique appearance in the Icheon Ceramic Art Village, which blends in very well with nature.",
                            HouseRules = "Check-in: 3:00 PM - 12:00 AM  , Checkout before 11:00  AM , 2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 37.3154m,
                            LocationId = 10,
                            Longitude = 127.4052m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 180m,
                            PropertyTypeId = 1,
                            SafteyInfo = "Carbon monoxide alarm not reported , Smoke alarm , Must climb stairs",
                            Title = "Emotional healing accommodation in Icheon-si, near Seoul"
                        },
                        new
                        {
                            Id = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            CancellationPolicy = "Free cancellation before May 19. Cancel before check-in on May 24 for a partial refund.",
                            Description = "This is a guitar-shaped country house located in Icheon, a ceramic art village. It is a private house with a spacious terrace on the 3rd floor of the Sera Guitar Culture Center, famous for its unique appearance in the Icheon Ceramic Art Village, which blends in very well with nature.",
                            HouseRules = "Check-in: 3:00 PM - 12:00 AM  , Checkout before 11:00  AM , 2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 33.9249m,
                            LocationId = 11,
                            Longitude = 18.4241m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 210m,
                            PropertyTypeId = 1,
                            SafteyInfo = "Carbon monoxide alarm not reported , Smoke alarm , Must climb stairs",
                            Title = "Kai Cottage"
                        },
                        new
                        {
                            Id = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            CancellationPolicy = "Free cancellation before Jun 18. Cancel before check-in on Jun 23 for a partial refund.",
                            Description = "Maadi is an uptown , green suburb with villas and gardens. My building is a five storey building . It is in a quiet area but a few minutes-walk away from Rd 9 where there are shops, cafes and restaurants. Everything you need is right here yet in 15 mins u can be in center of town.",
                            HouseRules = "Flexible check-in , 2 guests maximum , No pets",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 29.9617m,
                            LocationId = 12,
                            Longitude = 31.2667m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 100m,
                            PropertyTypeId = 2,
                            SafteyInfo = "No carbon monoxide alarm , No smoke alarm ,Nearby lake, river, other body of water",
                            Title = "sunny, spacious, clean room in maadi, cairo.."
                        },
                        new
                        {
                            Id = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            CancellationPolicy = "Add your trip dates to get the cancellation details for this stay.",
                            Description = "Charming small cottage situated on the edge of wetlands with beautiful views. Private gazebo with covered firepit and a dock over looking the large pond. Located on our 5 acre free range egg farm in Merville, BC. The pond is home to a family of beavers, bald eagles, blue heron and various birds. Private walking trail off the cottage and access to the One Spot Trail at the end of our private drive.",
                            HouseRules = "Check-in after 3:00 PM,Checkout before 11:00 AM,2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 49.6876m,
                            LocationId = 13,
                            Longitude = 124.9936m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 400m,
                            PropertyTypeId = 4,
                            SafteyInfo = "Exterior security cameras on property ,Carbon monoxide alarm , Smoke alarm",
                            Title = "Heather Cottage - Beautiful Wetland Views"
                        },
                        new
                        {
                            Id = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            CancellationPolicy = "Free cancellation before May 2, Cancel before check-in on May 3 for a partial refund.",
                            Description = "With panoramic water views, Delta Hotels by Marriott Virginia Beach Waterfront is an oasis on the shores of the breathtaking Chesapeake Bay.Thrill your palate with fresh oysters, fish, and coastal cuisine at our distinctive hotel restaurant, featuring inspiring water views.",
                            HouseRules = "Check-in: 4:00 PM - 12:00 AM , Checkout before 11:00 AM ,4 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 37.5407m,
                            LocationId = 14,
                            Longitude = 77.436m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 90m,
                            PropertyTypeId = 3,
                            SafteyInfo = "Carbon monoxide alarm, Smoke alarm",
                            Title = "Escape To Our Beachfront Oasis | Private Beach"
                        },
                        new
                        {
                            Id = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            CancellationPolicy = "Free cancellation before May 4. Cancel before check-in on May 5 for a partial refund.",
                            Description = "Discover this luxury apartment in Gammarth, in the tourist area, with sea views and direct access to a private beach reserved for residents. The master suite includes a private bathroom, and a second bathroom is available",
                            HouseRules = "Check-in after 3:00 PM,4 guests maximum,Pets allowed",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 36.9475m,
                            LocationId = 15,
                            Longitude = 10.3036m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 20m,
                            PropertyTypeId = 4,
                            SafteyInfo = "Carbon monoxide alarm not reported , Smoke alarm not reported",
                            Title = "Sea View S2: Waterfront, Private Beach"
                        },
                        new
                        {
                            Id = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            CancellationPolicy = "Free cancellation before May 9. Cancel before check-in on May 14 for a partial refund.",
                            Description = "Warm and cosy cottage decorated with antique furniture, with a lovely garden. Perfect if you're looking for a relaxing stay in beautiful countryside. The bedroom windows have blackout blinds and the beds are very comfortable.",
                            HouseRules = "Check-in: (4:00 PM - 10:00 PM) , Checkout before 11:00 AM , 4 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 50.7236m,
                            LocationId = 16,
                            Longitude = 4.8694m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 230m,
                            PropertyTypeId = 1,
                            SafteyInfo = "No carbon monoxide alarm , Nearby lake- river- other body of water , Smoke alarm",
                            Title = "Cosy English cottage with beautiful garden"
                        },
                        new
                        {
                            Id = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            CancellationPolicy = "Free cancellation before May 26. Cancel before check-in on May 14 for a partial refund.",
                            Description = "Comfortable room, queen bed, bathroom in suite, with air conditioning. Excelent location, among Palermo and Recoleta neighborhoods, one block away from Santa Fe av and 2 blocks away from subway line D.",
                            HouseRules = "Check-in brfore 4:00 Am , Checkout before 9:00 AM , 2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 34.6037m,
                            LocationId = 17,
                            Longitude = 58.3816m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 190m,
                            PropertyTypeId = 2,
                            SafteyInfo = "No carbon monoxide alarm  ,No Smoke alarm",
                            Title = "Palermo/Recoleta. Stylish room w/ensuite-bath & AC"
                        },
                        new
                        {
                            Id = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            CancellationPolicy = "Free cancellation before May 3. Cancel before check-in on May 14 for a full refund.",
                            Description = "Charming industrial character and premium homely comfort in the most desirable location. A leisurely stroll away from the shopping, dining & nightlife of Admiralty Way, Lekki Phase 1.Relax in the swimming pool or enjoy movies on satellite, Netflix or Amazon. Superfast optic-fibre broadband wi-fi. Uninterrupted 24/7 generator power back-up.",
                            HouseRules = "Check-in brfore 2:00 Am , Checkout before 9:00 AM , 3 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 6.4367m,
                            LocationId = 18,
                            Longitude = 3.5244m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 200m,
                            PropertyTypeId = 1,
                            SafteyInfo = "carbon monoxide alarm  , Smoke alarm",
                            Title = "The Foundry. Luxury 2BR w/pool"
                        },
                        new
                        {
                            Id = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            CancellationPolicy = "Free cancellation before May 5. Cancel before check-in on May 9 for a full refund.",
                            Description = "Xoi Farmstay is located in a green valley of Lam Thuong in the North of Vietnam, about 250km from Hanoi and near to Hagiang and Sapa.This is a place for those who love nature, watching rice fields, exotic mountains, spring and waterfall, authentic local culture, good food, especially non touristy",
                            HouseRules = "Check-in brfore 1:00 Am , Checkout before 11:00 AM , 1 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 21.05m,
                            LocationId = 19,
                            Longitude = 105.4333m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 100m,
                            PropertyTypeId = 4,
                            SafteyInfo = "carbon monoxide alarm  ,No Smoke alarm",
                            Title = "TXoi Farmstay- Homefarm in the valley of Lam Thuong"
                        },
                        new
                        {
                            Id = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            CancellationPolicy = "Free cancellation before May 5. Cancel before check-in on May 9 for a full refund.",
                            Description = "Welcome to our brand new one-bedroom flat offering incredible views of Business Bay canal and the iconic Burj Khalifa.",
                            HouseRules = "Check-in brfore 1:00 Am , Checkout before 11:00 AM , 1 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 25.2769m,
                            LocationId = 20,
                            Longitude = 55.2962m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 400m,
                            PropertyTypeId = 1,
                            SafteyInfo = "carbon monoxide alarm  , Smoke alarm",
                            Title = "Cosy flat in the heart of Dubai"
                        },
                        new
                        {
                            Id = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            CancellationPolicy = "Free cancellation before May 5. Cancel before check-in on May 9 for a full refund.",
                            Description = "Dar Ouassaggou's owner, Houssine, is a fluent English speaker and looks forward to welcoming you to his friendly guesthouse retreat in the Atlas Mountains, A Warm Welcome Awaits you at Dar Ouassaggou.It is a small comfortable guest house with 13 en suite rooms and balcony .",
                            HouseRules = "Check-in brfore 11:00 Am , Checkout before 12:00 AM , 3 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 31.1333m,
                            LocationId = 21,
                            Longitude = 7.9167m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 220m,
                            PropertyTypeId = 2,
                            SafteyInfo = "No carbon monoxide alarm  , Smoke alarm",
                            Title = "Atlas Mountains Riad Oussagou"
                        },
                        new
                        {
                            Id = "efd964ab-dceb-4b96-b113-665c5684a102",
                            CancellationPolicy = "Free cancellation before Apr 26. Cancel before check-in on May 1 for a partial refund.",
                            Description = "Two hours from Bogotá on the Bogotá-Sasaima road, live the unique experience of staying in a tree eight meters high.Wake up to the chirping of birds and fall asleep to the sound of the stream below.Enjoy a five-star suite with all the amenities in the branches of the trees.The cabin has hot water, a mini-fridge, and the most spectacular view.",
                            HouseRules = "Check-in brfore 3:00 PM , Checkout before 12:00 PM , 3 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 4.96705m,
                            LocationId = 22,
                            Longitude = -74.43512m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 100m,
                            PropertyTypeId = 4,
                            SafteyInfo = "carbon monoxide alarm  , No Smoke alarm , Nearby lake, river, other body of water",
                            Title = "The most spectacular treehouse in Colombia."
                        },
                        new
                        {
                            Id = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            CancellationPolicy = "Free cancellation before Apr 26. Cancel before check-in on May 1 for a partial refund.",
                            Description = "Chill in a quite and fresh area only 3 min drive to Ubud center.Our villa located in the middle of rice field , offered you great experience.Friendly owner will assist you 24 hours by call to make sure you can enjoy the stay .Stay for 3 nights and you will get Free Traditional Balinese massage for 1 person for 60 min to complete the lazy days",
                            HouseRules = "Check-in brfore 3:00 PM , Checkout before 12:00 PM , 3 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = -8.5441m,
                            LocationId = 23,
                            Longitude = 115.3255m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 110m,
                            PropertyTypeId = 1,
                            SafteyInfo = "carbon monoxide alarm  , No Smoke alarm , Nearby lake, river, other body of water",
                            Title = "Quite Get Away near by theCenter"
                        },
                        new
                        {
                            Id = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            CancellationPolicy = "Free cancellation before Apr 29. Cancel before check-in on May 1 for a partial refund.",
                            Description = "Elegant and spacious apartment on the 4th floor, designed and realized for 6 people.Totally renovated in February 2025.,Composed of 2 double bedrooms, 1 single bedroom and a sofa bed in the dining room.,2 bathrooms of which one inside the double room.It is possible to access the terrace from each room.",
                            HouseRules = "Check-in brfore 1:00 PM , Checkout before 10:00 PM , 2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 41.9028m,
                            LocationId = 24,
                            Longitude = 12.4964m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 90m,
                            PropertyTypeId = 3,
                            SafteyInfo = "carbon monoxide alarm  ,  Smoke alarm",
                            Title = "[*Bright new Metro C penthouse*]."
                        },
                        new
                        {
                            Id = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            CancellationPolicy = "Free cancellation before Apr 29. Cancel before check-in on May 1 for a partial refund.",
                            Description = "You will feel special from the beginning to the end of your holiday at Inone Mucho Selection Hotel, located on the seafront with a private beach in one of the clearest bays of Asarlik.Our facility which is located 5 minutes drive away from Bodrum center and 5 minutes from Gumbet bar street by walk. You can have a pleasant time while sipping your cocktail at our Iconic Beach restaurant, accompanied by various events and DJ performances.",
                            HouseRules = "Check-in brfore 1:00 PM , Checkout before 10:00 PM , 2 guests maximum",
                            IsActive = true,
                            IsDeleted = false,
                            Latitude = 37.0383m,
                            LocationId = 25,
                            Longitude = 27.4292m,
                            OwnerId = "3dacdb51-fee9-4479-904c-cafe7dca22a7",
                            PricePerNight = 200m,
                            PropertyTypeId = 2,
                            SafteyInfo = "carbon monoxide alarm  ,  Smoke alarm",
                            Title = "Inone Mucho Selection Hotel Deluxe Room B&B"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAmenity", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("PropertyAmenities");

                    b.HasData(
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            AmenityId = 9
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            AmenityId = 1
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            AmenityId = 11
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            AmenityId = 2
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            AmenityId = 4
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            AmenityId = 20
                        },
                        new
                        {
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            AmenityId = 34
                        },
                        new
                        {
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            AmenityId = 47
                        },
                        new
                        {
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            AmenityId = 12
                        },
                        new
                        {
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            AmenityId = 8
                        },
                        new
                        {
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            AmenityId = 26
                        },
                        new
                        {
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            AmenityId = 53
                        },
                        new
                        {
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            AmenityId = 41
                        },
                        new
                        {
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            AmenityId = 5
                        },
                        new
                        {
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            AmenityId = 30
                        },
                        new
                        {
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            AmenityId = 17
                        },
                        new
                        {
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            AmenityId = 39
                        },
                        new
                        {
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            AmenityId = 22
                        },
                        new
                        {
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            AmenityId = 14
                        },
                        new
                        {
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            AmenityId = 7
                        },
                        new
                        {
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            AmenityId = 36
                        },
                        new
                        {
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            AmenityId = 19
                        },
                        new
                        {
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            AmenityId = 29
                        },
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            AmenityId = 6
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            AmenityId = 10
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            AmenityId = 13
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            AmenityId = 16
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            AmenityId = 18
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            AmenityId = 21
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            AmenityId = 23
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            AmenityId = 24
                        },
                        new
                        {
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            AmenityId = 25
                        },
                        new
                        {
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            AmenityId = 27
                        },
                        new
                        {
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            AmenityId = 28
                        },
                        new
                        {
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            AmenityId = 31
                        },
                        new
                        {
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            AmenityId = 33
                        },
                        new
                        {
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            AmenityId = 35
                        },
                        new
                        {
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            AmenityId = 38
                        },
                        new
                        {
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            AmenityId = 40
                        },
                        new
                        {
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            AmenityId = 42
                        },
                        new
                        {
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            AmenityId = 43
                        },
                        new
                        {
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            AmenityId = 44
                        },
                        new
                        {
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            AmenityId = 45
                        },
                        new
                        {
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            AmenityId = 46
                        },
                        new
                        {
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            AmenityId = 48
                        },
                        new
                        {
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            AmenityId = 49
                        },
                        new
                        {
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            AmenityId = 50
                        },
                        new
                        {
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            AmenityId = 52
                        },
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            AmenityId = 3
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            AmenityId = 5
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            AmenityId = 7
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            AmenityId = 8
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            AmenityId = 12
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            AmenityId = 14
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            AmenityId = 17
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            AmenityId = 19
                        },
                        new
                        {
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            AmenityId = 22
                        },
                        new
                        {
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            AmenityId = 26
                        },
                        new
                        {
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            AmenityId = 29
                        },
                        new
                        {
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            AmenityId = 30
                        },
                        new
                        {
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            AmenityId = 32
                        },
                        new
                        {
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            AmenityId = 34
                        },
                        new
                        {
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            AmenityId = 36
                        },
                        new
                        {
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            AmenityId = 37
                        },
                        new
                        {
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            AmenityId = 39
                        },
                        new
                        {
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            AmenityId = 41
                        },
                        new
                        {
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            AmenityId = 47
                        },
                        new
                        {
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            AmenityId = 51
                        },
                        new
                        {
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            AmenityId = 53
                        },
                        new
                        {
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            AmenityId = 54
                        },
                        new
                        {
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            AmenityId = 56
                        },
                        new
                        {
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            AmenityId = 58
                        },
                        new
                        {
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            AmenityId = 59
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2(3)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyAvailabilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            StartDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            StartDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            StartDate = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            StartDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            StartDate = new DateTime(2025, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            StartDate = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            StartDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2025, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            StartDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2025, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            StartDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2025, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            StartDate = new DateTime(2025, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            StartDate = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            StartDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            StartDate = new DateTime(2025, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2025, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            StartDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            EndDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            StartDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            EndDate = new DateTime(2025, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            StartDate = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            EndDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            StartDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            EndDate = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            StartDate = new DateTime(2025, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            StartDate = new DateTime(2025, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            EndDate = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            StartDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            EndDate = new DateTime(2025, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            StartDate = new DateTime(2025, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            EndDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            EndDate = new DateTime(2025, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            StartDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            EndDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            StartDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            EndDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            StartDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            EndDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            StartDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            StartDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            StartDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            EndDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            EndDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            StartDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            EndDate = new DateTime(2025, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            StartDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            EndDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            StartDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            EndDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            EndDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            StartDate = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            EndDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            StartDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            EndDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            StartDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            StartDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            EndDate = new DateTime(2025, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            EndDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            StartDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            EndDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            StartDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            EndDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            StartDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            StartDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            EndDate = new DateTime(2025, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            EndDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            StartDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 54,
                            EndDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            StartDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 55,
                            EndDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            StartDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 56,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 57,
                            EndDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            StartDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 58,
                            EndDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            StartDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 59,
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            StartDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 60,
                            EndDate = new DateTime(2025, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 61,
                            EndDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            StartDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 62,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 63,
                            EndDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 64,
                            EndDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            StartDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 65,
                            EndDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 66,
                            EndDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            StartDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 67,
                            EndDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            StartDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 68,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 69,
                            EndDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            StartDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 70,
                            EndDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            StartDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 71,
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            StartDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 72,
                            EndDate = new DateTime(2025, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 73,
                            EndDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            StartDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 74,
                            EndDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            StartDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 75,
                            EndDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyFees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1212.09m,
                            Name = "Cleaning Fee",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 442.09m,
                            Name = "Extra Guest Fee",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 600m,
                            Name = "Pet Fee",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1200m,
                            Name = "Cleaning Fee",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 600m,
                            Name = "Pet Fee",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 950.50m,
                            Name = "Cleaning Fee",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 900.12m,
                            Name = "Cleaning Fee",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 330.00m,
                            Name = "Extra Guest Fee",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 442.09m,
                            Name = "Pet Fee",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 800.75m,
                            Name = "Cleaning Fee",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7"
                        },
                        new
                        {
                            Id = 11,
                            Amount = 113.09m,
                            Name = "Cleaning Fee",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f"
                        },
                        new
                        {
                            Id = 12,
                            Amount = 510.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16"
                        },
                        new
                        {
                            Id = 13,
                            Amount = 250.00m,
                            Name = "Pet Fee",
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1"
                        },
                        new
                        {
                            Id = 14,
                            Amount = 789.99m,
                            Name = "Cleaning Fee",
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c"
                        },
                        new
                        {
                            Id = 15,
                            Amount = 199.99m,
                            Name = "Extra Guest Fee",
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6"
                        },
                        new
                        {
                            Id = 16,
                            Amount = 450.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2"
                        },
                        new
                        {
                            Id = 17,
                            Amount = 320.00m,
                            Name = "Pet Fee",
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33"
                        },
                        new
                        {
                            Id = 18,
                            Amount = 670.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e"
                        },
                        new
                        {
                            Id = 19,
                            Amount = 275.50m,
                            Name = "Extra Guest Fee",
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252"
                        },
                        new
                        {
                            Id = 20,
                            Amount = 390.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08"
                        },
                        new
                        {
                            Id = 21,
                            Amount = 425.99m,
                            Name = "Cleaning Fee",
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c"
                        },
                        new
                        {
                            Id = 22,
                            Amount = 515.49m,
                            Name = "Pet Fee",
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971"
                        },
                        new
                        {
                            Id = 23,
                            Amount = 398.89m,
                            Name = "Extra Guest Fee",
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273"
                        },
                        new
                        {
                            Id = 24,
                            Amount = 300.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198"
                        },
                        new
                        {
                            Id = 25,
                            Amount = 345.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102"
                        },
                        new
                        {
                            Id = 26,
                            Amount = 410.00m,
                            Name = "Pet Fee",
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f"
                        },
                        new
                        {
                            Id = 27,
                            Amount = 289.00m,
                            Name = "Extra Guest Fee",
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce"
                        },
                        new
                        {
                            Id = 28,
                            Amount = 378.00m,
                            Name = "Cleaning Fee",
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyGuest", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GuestTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.HasKey("PropertyId", "GuestTypeId");

                    b.HasIndex("GuestTypeId");

                    b.ToTable("PropertyGuests");

                    b.HasData(
                        new
                        {
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            GuestTypeId = 1,
                            GuestCount = 1
                        },
                        new
                        {
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            GuestTypeId = 1,
                            GuestCount = 4
                        },
                        new
                        {
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            GuestTypeId = 1,
                            GuestCount = 3
                        },
                        new
                        {
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            GuestTypeId = 1,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            GuestTypeId = 1,
                            GuestCount = 5
                        },
                        new
                        {
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            GuestTypeId = 1,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            GuestTypeId = 1,
                            GuestCount = 4
                        },
                        new
                        {
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            GuestTypeId = 1,
                            GuestCount = 1
                        },
                        new
                        {
                            PropertyId = "4b04a76a-1608-4a8f-b09c-8d9043b83e16",
                            GuestTypeId = 1,
                            GuestCount = 3
                        },
                        new
                        {
                            PropertyId = "2ab6e4d1-79b9-4dba-9109-22ef75a29ff1",
                            GuestTypeId = 1,
                            GuestCount = 5
                        },
                        new
                        {
                            PropertyId = "ef3b2df2-e539-4cb9-8eb6-4eeb833e694c",
                            GuestTypeId = 1,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "3c0e361a-51df-4e03-b8d0-2d7601aa60f6",
                            GuestTypeId = 1,
                            GuestCount = 4
                        },
                        new
                        {
                            PropertyId = "c5c0d4db-b048-4ee4-8835-344900fd35b2",
                            GuestTypeId = 1,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "0bb50f31-e322-4b76-97dd-6a7fcf585d33",
                            GuestTypeId = 2,
                            GuestCount = 4
                        },
                        new
                        {
                            PropertyId = "a555515a-ff8a-4741-b0a4-db9be729198e",
                            GuestTypeId = 3,
                            GuestCount = 1
                        },
                        new
                        {
                            PropertyId = "c10d2d46-869a-46bc-a46d-90bdd958c252",
                            GuestTypeId = 4,
                            GuestCount = 3
                        },
                        new
                        {
                            PropertyId = "1adca40b-b8ff-4cea-b6e4-8e5f40d29c08",
                            GuestTypeId = 1,
                            GuestCount = 5
                        },
                        new
                        {
                            PropertyId = "294e2751-203b-4beb-b21e-0bb96f082d7c",
                            GuestTypeId = 2,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "06dbae08-bc6b-4ca6-9162-3213784b9971",
                            GuestTypeId = 3,
                            GuestCount = 4
                        },
                        new
                        {
                            PropertyId = "f1e8be41-4fd5-47e4-8960-12d8f4afc273",
                            GuestTypeId = 4,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "763e6c5f-1ad1-4071-b0e6-55e924624198",
                            GuestTypeId = 1,
                            GuestCount = 3
                        },
                        new
                        {
                            PropertyId = "efd964ab-dceb-4b96-b113-665c5684a102",
                            GuestTypeId = 2,
                            GuestCount = 1
                        },
                        new
                        {
                            PropertyId = "52a8df7d-c0b2-4ee3-8369-9daed4885f9f",
                            GuestTypeId = 3,
                            GuestCount = 2
                        },
                        new
                        {
                            PropertyId = "c150e428-1c9a-43a2-be07-f4366875f1ce",
                            GuestTypeId = 4,
                            GuestCount = 4
                        },
                        new
                        {
                            PropertyId = "2e3ed231-a2a6-4961-a1ba-f232d56c6f35",
                            GuestTypeId = 1,
                            GuestCount = 2
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyPhoto", b =>
                {
                    b.Property<string>("PhotoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TouchedAt")
                        .HasColumnType("datetime2(3)");

                    b.HasKey("PhotoId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyPhotos");

                    b.HasData(
                        new
                        {
                            PhotoId = "b455bb0a-69a3-4024-b5fa-5a49323e58fd",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "dc16e3d2-16ed-4ff5-b9c2-27a1e8b5ccbe",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "4b0f81f1-9bc0-45c6-988e-1a4fd270b3e0",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "2ac68b52-e7b6-4bb7-9f8e-49aa7f2b2b6c",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "69c6c01e-65b3-4cf7-bbc7-2e94272b658a",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "95cde2b1-305e-4c13-9293-8c4c8f7c8b9f",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "7a18064f-b6cb-4d58-a51b-0e8a74eac7a4",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "4dfe3d56-2d34-4a6b-9cb5-f7a5a2dd8c28",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "6c54a231-b88f-409f-b5d5-170180930186",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "26d418bb-0f90-4f3c-b339-7dd5c31b5e99",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "a4c0d40d-e90e-4b14-8a2a-5ac0212be9b1",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "89f65612-5023-489e-9604-2f01074abf0c",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "b21f8f4f-6d95-4f60-81b4-56d2ef017a08",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "e34a2808-38df-4e47-8c3e-d6e3f2712f11",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "5b742ed2-28d9-4e3b-8125-6e9c4587a0d3",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "2cf95d6d-63ae-4b97-8101-c6c5e8227b6d",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "ce9e31d6-6553-4214-8b94-fb9c8f3065ed",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "5e2e82a1-4893-4a63-9375-d73f7a09d7c5",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "7d861c0c-011d-4b2a-8ce5-f5b1f0b81d01",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "fbc177de-bf4c-4b75-a1f6-884d05ce6c9f",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "51d1e109-dccf-45fd-9f15-bbd3c0b7fcd5",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "6c79893d-f97f-4fc6-b0c3-4ebfcab3f85f",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "98a76538-918f-4e60-9c01-b364e0e1891f",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PhotoId = "f3885b77-0f9e-4ec3-9b3e-cbc194a07d7f",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            TouchedAt = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpace", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("IsShared")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PropertySpaceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("PropertySpaceTypeId");

                    b.ToTable("PropertySpaces");

                    b.HasData(
                        new
                        {
                            Id = "3f95f420-21d6-4b2b-b2ef-4b2c92a7f2e9",
                            IsShared = true,
                            Name = "Bedroom 1",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = "96ab72d9-2e0d-42d3-a5e3-1eaafc99b3c3",
                            IsShared = false,
                            Name = "Bedroom 2",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = "f84c1d56-cdb4-4ac4-8a4e-1c7f4d1f32a7",
                            IsShared = true,
                            Name = "Living Room 3",
                            PropertyId = "cc4e48ea-ca54-4d32-a448-3c2c9d14f936",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = "6b631776-91e2-4b4c-bd37-cd82b9b4477d",
                            IsShared = true,
                            Name = "Kitchen 1",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = "2450b4fc-b6b1-4b5e-a4e6-e9e297eeb8ff",
                            IsShared = false,
                            Name = "Bathroom 1",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = "74f3f8db-0bfc-4c0b-b527-71a326e3f3e1",
                            IsShared = true,
                            Name = "Balcony",
                            PropertyId = "d8eecb1f-5583-4d64-a7dc-5aef5e2c498f",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = "f65eb14d-4463-4fa9-a8c6-4b497e20d760",
                            IsShared = true,
                            Name = "Dining Room",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = "0ea8ad1a-78d3-4e4a-831f-fb268e372338",
                            IsShared = false,
                            Name = "Office",
                            PropertyId = "8e95f4b1-dc1d-4b4d-8102-09b7fbb88ec4",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = "c9f0d1e3-54a3-4f03-8b69-c11f3bdf02a6",
                            IsShared = true,
                            Name = "Game Room",
                            PropertyId = "3e7f99ab-228a-4d90-91c4-6adf8c12e048",
                            PropertySpaceTypeId = 14
                        },
                        new
                        {
                            Id = "6a61a1b1-27fd-4f3f-9d8a-9db0b2c35f5e",
                            IsShared = false,
                            Name = "Storage",
                            PropertyId = "f1cc1b4c-b674-4a1a-89ee-5f7b4d44d2f7",
                            PropertySpaceTypeId = 16
                        },
                        new
                        {
                            Id = "e5dc74e1-d3c0-4878-8e9c-c4dc10fdbf0f",
                            IsShared = true,
                            Name = "Library",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = "e1de9d5c-8232-44cc-9abf-9c9a1f0a5e0f",
                            IsShared = true,
                            Name = "Gym",
                            PropertyId = "a43ecbfa-7b0a-4f6b-9c88-987be3c4e3d3",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = "b038b3db-c74d-4d2d-89a6-1ddf5c9580df",
                            IsShared = false,
                            Name = "Bathroom 1",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = "961aa4f3-45dc-4933-a47b-cba57c1f726b",
                            IsShared = true,
                            Name = "Laundry Room",
                            PropertyId = "4e3d342-8e8d-4f1d-8123-2d09cb92b6a2",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = "87e0c991-e32c-4e9c-a780-96f5567a9bb1",
                            IsShared = false,
                            Name = "Kitchen 1",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = "ed9f2a7b-3e54-403e-b0ae-64ec33eec956",
                            IsShared = false,
                            Name = "Bathroom 2",
                            PropertyId = "5ca2f710-3c1f-4966-a924-7bcdf5ce57aa",
                            PropertySpaceTypeId = 2
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PropertySpaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PropertySpaceItemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertySpaceId");

                    b.HasIndex("PropertySpaceItemTypeId");

                    b.ToTable("PropertySpaceItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PropertySpaceId = "3f95f420-21d6-4b2b-b2ef-4b2c92a7f2e9",
                            PropertySpaceItemTypeId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            PropertySpaceId = "96ab72d9-2e0d-42d3-a5e3-1eaafc99b3c3",
                            PropertySpaceItemTypeId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            PropertySpaceId = "f84c1d56-cdb4-4ac4-8a4e-1c7f4d1f32a7",
                            PropertySpaceItemTypeId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            PropertySpaceId = "6b631776-91e2-4b4c-bd37-cd82b9b4477d",
                            PropertySpaceItemTypeId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            PropertySpaceId = "2450b4fc-b6b1-4b5e-a4e6-e9e297eeb8ff",
                            PropertySpaceItemTypeId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            PropertySpaceId = "74f3f8db-0bfc-4c0b-b527-71a326e3f3e1",
                            PropertySpaceItemTypeId = 25,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 7,
                            PropertySpaceId = "f65eb14d-4463-4fa9-a8c6-4b497e20d760",
                            PropertySpaceItemTypeId = 13,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            PropertySpaceId = "0ea8ad1a-78d3-4e4a-831f-fb268e372338",
                            PropertySpaceItemTypeId = 16,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            PropertySpaceId = "c9f0d1e3-54a3-4f03-8b69-c11f3bdf02a6",
                            PropertySpaceItemTypeId = 39,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            PropertySpaceId = "6a61a1b1-27fd-4f3f-9d8a-9db0b2c35f5e",
                            PropertySpaceItemTypeId = 42,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            PropertySpaceId = "e5dc74e1-d3c0-4878-8e9c-c4dc10fdbf0f",
                            PropertySpaceItemTypeId = 18,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            PropertySpaceId = "e1de9d5c-8232-44cc-9abf-9c9a1f0a5e0f",
                            PropertySpaceItemTypeId = 12,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 13,
                            PropertySpaceId = "b038b3db-c74d-4d2d-89a6-1ddf5c9580df",
                            PropertySpaceItemTypeId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            PropertySpaceId = "961aa4f3-45dc-4933-a47b-cba57c1f726b",
                            PropertySpaceItemTypeId = 19,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 15,
                            PropertySpaceId = "87e0c991-e32c-4e9c-a780-96f5567a9bb1",
                            PropertySpaceItemTypeId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            PropertySpaceId = "ed9f2a7b-3e54-403e-b0ae-64ec33eec956",
                            PropertySpaceItemTypeId = 6,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PropertySpaceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertySpaceTypeId");

                    b.ToTable("PropertySpaceItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Master Bedroom",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Guest Bedroom",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kid’s Bedroom",
                            PropertySpaceTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Full Bathroom",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Half Bathroom",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ensuite Bathroom",
                            PropertySpaceTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Full Kitchen",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kitchenette",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Outdoor Kitchen",
                            PropertySpaceTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Living Room",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = 11,
                            Name = "Lounge Area",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Entertainment Room",
                            PropertySpaceTypeId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Dining Room",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Breakfast Nook",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Bar Counter",
                            PropertySpaceTypeId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "Dedicated Office",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = 17,
                            Name = "Desk in Room",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = 18,
                            Name = "Co-working Corner",
                            PropertySpaceTypeId = 6
                        },
                        new
                        {
                            Id = 19,
                            Name = "Laundry Room",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = 20,
                            Name = "Washer/Dryer in Unit",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = 21,
                            Name = "Shared Laundry Area",
                            PropertySpaceTypeId = 7
                        },
                        new
                        {
                            Id = 22,
                            Name = "Private Entrance",
                            PropertySpaceTypeId = 8
                        },
                        new
                        {
                            Id = 23,
                            Name = "Shared Entrance",
                            PropertySpaceTypeId = 8
                        },
                        new
                        {
                            Id = 24,
                            Name = "Gated Entrance",
                            PropertySpaceTypeId = 8
                        },
                        new
                        {
                            Id = 25,
                            Name = "Balcony",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = 26,
                            Name = "Terrace",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = 27,
                            Name = "Rooftop",
                            PropertySpaceTypeId = 9
                        },
                        new
                        {
                            Id = 28,
                            Name = "Backyard",
                            PropertySpaceTypeId = 10
                        },
                        new
                        {
                            Id = 29,
                            Name = "Garden",
                            PropertySpaceTypeId = 10
                        },
                        new
                        {
                            Id = 30,
                            Name = "Courtyard",
                            PropertySpaceTypeId = 10
                        },
                        new
                        {
                            Id = 31,
                            Name = "Fire Pit",
                            PropertySpaceTypeId = 11
                        },
                        new
                        {
                            Id = 32,
                            Name = "Indoor Fireplace",
                            PropertySpaceTypeId = 11
                        },
                        new
                        {
                            Id = 33,
                            Name = "Outdoor Fireplace",
                            PropertySpaceTypeId = 11
                        },
                        new
                        {
                            Id = 34,
                            Name = "Nursery",
                            PropertySpaceTypeId = 12
                        },
                        new
                        {
                            Id = 35,
                            Name = "Changing Station",
                            PropertySpaceTypeId = 12
                        },
                        new
                        {
                            Id = 36,
                            Name = "Crib Corner",
                            PropertySpaceTypeId = 12
                        },
                        new
                        {
                            Id = 37,
                            Name = "Indoor Playroom",
                            PropertySpaceTypeId = 13
                        },
                        new
                        {
                            Id = 38,
                            Name = "Outdoor Playset",
                            PropertySpaceTypeId = 13
                        },
                        new
                        {
                            Id = 39,
                            Name = "Game Room",
                            PropertySpaceTypeId = 13
                        },
                        new
                        {
                            Id = 40,
                            Name = "Walk-in Closet",
                            PropertySpaceTypeId = 14
                        },
                        new
                        {
                            Id = 41,
                            Name = "Wardrobe",
                            PropertySpaceTypeId = 14
                        },
                        new
                        {
                            Id = 42,
                            Name = "Luggage Storage",
                            PropertySpaceTypeId = 14
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PropertySpaceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bedroom"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bathroom"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dining Area"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Workspace"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Laundry Area"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Private Entrance"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Balcony"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Patio"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Backyard"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fire Pit"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Baby Room"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Children’s Play Area"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Closet"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Storage Space"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "house",
                            Name = "House/Apartment"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "bed-single",
                            Name = "Room"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "hotel",
                            Name = "Hotel"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "sun-moon",
                            Name = "Unique & Themed Stays"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "North America"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Asia"
                        },
                        new
                        {
                            Id = 4,
                            Name = "South America"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Africa & Oceania"
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.Review", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("Accuracy")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CheckIn")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal>("Cleanliness")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Communication")
                        .HasColumnType("decimal(2,1)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Location")
                        .HasColumnType("decimal(2,1)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(2,1)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("CreatedAt");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = "66d2f0d9-1f1f-4a02-81d6-0ecabc5215e6",
                            Accuracy = 4.0m,
                            BookingId = "7f6b0bb5-e99e-47c7-8d75-b5d46284e241",
                            CheckIn = 5.0m,
                            Cleanliness = 4.5m,
                            Comment = "Great stay overall",
                            Communication = 4.5m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 4.0m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 5.0m
                        },
                        new
                        {
                            Id = "a54b86b1-65e2-426b-81ef-c65c71e5b8d0",
                            Accuracy = 4.5m,
                            BookingId = "49b69c8a-8b4b-4021-85f4-ff273b70c85d",
                            CheckIn = 4.0m,
                            Cleanliness = 5.0m,
                            Comment = "Comfortable and clean",
                            Communication = 5.0m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 4.5m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 4.5m
                        },
                        new
                        {
                            Id = "2fca2c7e-263b-4d7e-99e7-0c1c3ad2aa08",
                            Accuracy = 3.0m,
                            BookingId = "438d19e1-66fc-4219-9e3d-0519c9c27332",
                            CheckIn = 2.5m,
                            Cleanliness = 3.5m,
                            Comment = "Could be better",
                            Communication = 4.0m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 3.0m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 3.0m
                        },
                        new
                        {
                            Id = "fca2e08b-0436-4f3f-8261-f69cf3eaa579",
                            Accuracy = 3.5m,
                            BookingId = "e42b9075-d67c-4b5f-8316-bde33ef7272a",
                            CheckIn = 3.0m,
                            Cleanliness = 3.0m,
                            Comment = "Average experience",
                            Communication = 3.5m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 3.0m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 3.0m
                        },
                        new
                        {
                            Id = "72b3d68d-234a-4ed7-b7f7-e07fc82f58ef",
                            Accuracy = 4.0m,
                            BookingId = "b6d7b477-9b64-4a79-b7a3-b01c45378d5e",
                            CheckIn = 3.5m,
                            Cleanliness = 4.0m,
                            Comment = "Good value for money",
                            Communication = 4.5m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 4.0m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 4.0m
                        },
                        new
                        {
                            Id = "ffc234ae-2820-4fd6-b9d7-6b315d91a790",
                            Accuracy = 5.0m,
                            BookingId = "0fe8f9f5-7751-460b-b39f-dab6946c0ba2",
                            CheckIn = 5.0m,
                            Cleanliness = 5.0m,
                            Comment = "Perfect location",
                            Communication = 5.0m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 5.0m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 5.0m
                        },
                        new
                        {
                            Id = "e62cd505-8d60-430b-8b52-16d40902a303",
                            Accuracy = 4.5m,
                            BookingId = "7b479ff7-22c5-46ad-85a3-204b502e5d0b",
                            CheckIn = 4.0m,
                            Cleanliness = 4.5m,
                            Comment = "Very good host",
                            Communication = 5.0m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 4.5m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 4.5m
                        },
                        new
                        {
                            Id = "84c03e84-cd8b-4dbf-a0f4-48ed3dd0b0aa",
                            Accuracy = 5.0m,
                            BookingId = "8a45a4b6-24ab-4a5b-8ef3-17b7de41295a",
                            CheckIn = 5.0m,
                            Cleanliness = 5.0m,
                            Comment = "Excellent experience",
                            Communication = 5.0m,
                            CreatedAt = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = 5.0m,
                            UpdatedAt = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 5.0m
                        });
                });

            modelBuilder.Entity("Nestin.Core.Entities.UserProfile", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PhotoId")
                        .IsUnique()
                        .HasFilter("[PhotoId] IS NOT NULL");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nestin.Core.Entities.Amenity", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AmenityCategory", "AmenityCategory")
                        .WithMany("Amenities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmenityCategory");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Booking", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("Bookings")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nestin.Core.Entities.BookingGuest", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Booking", "Booking")
                        .WithMany("BookingGuests")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.GuestType", "GuestType")
                        .WithMany()
                        .HasForeignKey("GuestTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("GuestType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Country", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Region", "Region")
                        .WithMany("Countries")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Nestin.Core.Entities.FavoriteProperty", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nestin.Core.Entities.HostUpgradeRequest", b =>
                {
                    b.HasOne("Nestin.Core.Entities.AppUser", "Approver")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nestin.Core.Entities.FileUpload", "BackPhoto")
                        .WithOne()
                        .HasForeignKey("Nestin.Core.Entities.HostUpgradeRequest", "BackPhotoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.FileUpload", "FrontPhoto")
                        .WithOne()
                        .HasForeignKey("Nestin.Core.Entities.HostUpgradeRequest", "FrontPhotoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("BackPhoto");

                    b.Navigation("FrontPhoto");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Location", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Payment", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Property", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Location", "Location")
                        .WithMany("Properties")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.AppUser", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.PropertyType", "PropertyType")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Owner");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAmenity", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyAvailability", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyAvailabilities")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyFee", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyFees")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyGuest", b =>
                {
                    b.HasOne("Nestin.Core.Entities.GuestType", "GuestType")
                        .WithMany("PropertyGuests")
                        .HasForeignKey("GuestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyGuests")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuestType");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyPhoto", b =>
                {
                    b.HasOne("Nestin.Core.Entities.FileUpload", "FileUpload")
                        .WithOne("PropertyPhoto")
                        .HasForeignKey("Nestin.Core.Entities.PropertyPhoto", "PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertyPhotos")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUpload");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpace", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Property", "Property")
                        .WithMany("PropertySpaces")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.PropertySpaceType", "PropertySpaceType")
                        .WithMany("PropertySpaces")
                        .HasForeignKey("PropertySpaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("PropertySpaceType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItem", b =>
                {
                    b.HasOne("Nestin.Core.Entities.PropertySpace", "PropertySpace")
                        .WithMany("PropertySpaceItems")
                        .HasForeignKey("PropertySpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nestin.Core.Entities.PropertySpaceItemType", "PropertySpaceItemType")
                        .WithMany("PropertySpaceItems")
                        .HasForeignKey("PropertySpaceItemTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PropertySpace");

                    b.Navigation("PropertySpaceItemType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItemType", b =>
                {
                    b.HasOne("Nestin.Core.Entities.PropertySpaceType", "PropertySpaceType")
                        .WithMany("PropertySpaceItemTypes")
                        .HasForeignKey("PropertySpaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertySpaceType");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Review", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Booking", "Booking")
                        .WithOne("Review")
                        .HasForeignKey("Nestin.Core.Entities.Review", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Nestin.Core.Entities.UserProfile", b =>
                {
                    b.HasOne("Nestin.Core.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Nestin.Core.Entities.FileUpload", "Photo")
                        .WithOne()
                        .HasForeignKey("Nestin.Core.Entities.UserProfile", "PhotoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Nestin.Core.Entities.AppUser", "AppUser")
                        .WithOne()
                        .HasForeignKey("Nestin.Core.Entities.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Country");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Nestin.Core.Entities.AmenityCategory", b =>
                {
                    b.Navigation("Amenities");
                });

            modelBuilder.Entity("Nestin.Core.Entities.AppUser", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Booking", b =>
                {
                    b.Navigation("BookingGuests");

                    b.Navigation("Payments");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Country", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Nestin.Core.Entities.FileUpload", b =>
                {
                    b.Navigation("PropertyPhoto");
                });

            modelBuilder.Entity("Nestin.Core.Entities.GuestType", b =>
                {
                    b.Navigation("PropertyGuests");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Location", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Property", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("PropertyAvailabilities");

                    b.Navigation("PropertyFees");

                    b.Navigation("PropertyGuests");

                    b.Navigation("PropertyPhotos");

                    b.Navigation("PropertySpaces");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpace", b =>
                {
                    b.Navigation("PropertySpaceItems");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceItemType", b =>
                {
                    b.Navigation("PropertySpaceItems");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertySpaceType", b =>
                {
                    b.Navigation("PropertySpaceItemTypes");

                    b.Navigation("PropertySpaces");
                });

            modelBuilder.Entity("Nestin.Core.Entities.PropertyType", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Nestin.Core.Entities.Region", b =>
                {
                    b.Navigation("Countries");
                });
#pragma warning restore 612, 618
        }
    }
}
